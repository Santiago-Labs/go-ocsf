// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type SoftwareBillofMaterials struct {

	// Created Time: The time when the SBOM was created.
	CreatedTime int64 `json:"created_time,omitempty" parquet:"created_time,timestamp_millis,timestamp(millisecond),optional"`

	// Software Package: The software package or library that is being discovered or inventoried by an SBOM.
	Package SoftwarePackage `json:"package" parquet:"package"`

	// Product: Details about the upstream product that generated the SBOM e.g. <code>cdxgen</code> or <code>Syft</code>.
	Product *Product `json:"product,omitempty" parquet:"product,optional"`

	// Software Components: The list of software components used in the software package.
	SoftwareComponents []SoftwareComponent `json:"software_components" parquet:"software_components,list"`

	// Type: The type of SBOM, normalized to the caption of the <code>type_id</code> value. In the case of 'Other', it is defined by the source.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Type ID: The type of SBOM.
	TypeId *int32 `json:"type_id,omitempty" parquet:"type_id,optional"`

	// SBOM ID: A unique identifier for the SBOM or the SBOM generation by a source tool, such as the SPDX <code>metadata.component.bom-ref</code>.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// Version: The specification (spec) version of the particular SBOM, e.g., <code>1.6</code>.
	Version *string `json:"version,omitempty" parquet:"version,optional"`
}

func (v *SoftwareBillofMaterials) Observable() (*int, string) {
	return nil, ""
}

var SoftwareBillofMaterialsFields = []arrow.Field{
	{Name: "created_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "package", Type: SoftwarePackageStruct, Nullable: false},
	{Name: "product", Type: ProductStruct, Nullable: true},
	{Name: "software_components", Type: arrow.ListOf(SoftwareComponentStruct), Nullable: false},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "version", Type: arrow.BinaryTypes.String, Nullable: true},
}

var SoftwareBillofMaterialsStruct = arrow.StructOf(SoftwareBillofMaterialsFields...)

var SoftwareBillofMaterialsSchema = arrow.NewSchema(SoftwareBillofMaterialsFields, nil)
var SoftwareBillofMaterialsClassname = "sbom"
