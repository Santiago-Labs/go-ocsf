// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Remediation struct {

	// CIS Controls: An array of Center for Internet Security (CIS) Controls that can be optionally mapped to provide additional remediation details.
	CisControls []CISControl `json:"cis_controls,omitempty" parquet:"cis_controls,list,optional"`

	// Description: The description of the remediation strategy.
	Desc string `json:"desc" parquet:"desc"`

	// Knowledgebase Articles: A list of KB articles or patches related to an endpoint. A KB Article contains metadata that describes the patch or an update.
	KbArticleList []KBArticle `json:"kb_article_list,omitempty" parquet:"kb_article_list,list,optional"`

	// References: A list of supporting URL/s, references that help describe the remediation strategy.
	References []string `json:"references,omitempty" parquet:"references,list,optional"`
}

func (v *Remediation) Observable() (*int, string) {
	return nil, ""
}

var RemediationFields = []arrow.Field{
	{Name: "cis_controls", Type: arrow.ListOf(CISControlStruct), Nullable: true},
	{Name: "desc", Type: arrow.BinaryTypes.String, Nullable: false},
	{Name: "kb_article_list", Type: arrow.ListOf(KBArticleStruct), Nullable: true},
	{Name: "references", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
}

var RemediationStruct = arrow.StructOf(RemediationFields...)

var RemediationSchema = arrow.NewSchema(RemediationFields, nil)
var RemediationClassname = "remediation"
