// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type AuthenticationToken struct {

	// Created Time: The time that the authentication token was created.
	CreatedTime int64 `json:"created_time,omitempty" parquet:"created_time,timestamp_millis,timestamp(millisecond),optional"`

	// Encryption Details: The encryption details of the authentication token.
	EncryptionDetails *EncryptionDetails `json:"encryption_details,omitempty" parquet:"encryption_details,optional"`

	// Expiration Time: The expiration time of the authentication token.
	ExpirationTime int64 `json:"expiration_time,omitempty" parquet:"expiration_time,timestamp_millis,timestamp(millisecond),optional"`

	// Renewable: Indicates whether the authentication token is renewable.
	IsRenewable *bool `json:"is_renewable,omitempty" parquet:"is_renewable,optional"`

	// Kerberos Flags: A bitmask, either in hexadecimal or decimal form, which encodes various attributes or permissions associated with a Kerberos ticket. These flags delineate specific characteristics of the ticket, such as its renewability or forwardability.
	KerberosFlags *string `json:"kerberos_flags,omitempty" parquet:"kerberos_flags,optional"`

	// Type: The type of the authentication token.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Type ID: The normalized authentication token type identifier.
	TypeId *int32 `json:"type_id,omitempty" parquet:"type_id,optional"`
}

func (v *AuthenticationToken) Observable() (*int, string) {
	return nil, ""
}

var AuthenticationTokenFields = []arrow.Field{
	{Name: "created_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "encryption_details", Type: EncryptionDetailsStruct, Nullable: true},
	{Name: "expiration_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "is_renewable", Type: arrow.FixedWidthTypes.Boolean, Nullable: true},
	{Name: "kerberos_flags", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
}

var AuthenticationTokenStruct = arrow.StructOf(AuthenticationTokenFields...)

var AuthenticationTokenSchema = arrow.NewSchema(AuthenticationTokenFields, nil)
var AuthenticationTokenClassname = "authentication_token"
