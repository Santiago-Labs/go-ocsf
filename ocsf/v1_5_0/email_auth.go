// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type EmailAuthentication struct {

	// DKIM Status: The DomainKeys Identified Mail (DKIM) status of the email.
	Dkim *string `json:"dkim,omitempty" parquet:"dkim,optional"`

	// DKIM Domain: The DomainKeys Identified Mail (DKIM) signing domain of the email.
	DkimDomain *string `json:"dkim_domain,omitempty" parquet:"dkim_domain,optional"`

	// DKIM Signature: The DomainKeys Identified Mail (DKIM) signature used by the sending/receiving system.
	DkimSignature *string `json:"dkim_signature,omitempty" parquet:"dkim_signature,optional"`

	// DMARC Status: The Domain-based Message Authentication, Reporting and Conformance (DMARC) status of the email.
	Dmarc *string `json:"dmarc,omitempty" parquet:"dmarc,optional"`

	// DMARC Override: The Domain-based Message Authentication, Reporting and Conformance (DMARC) override action.
	DmarcOverride *string `json:"dmarc_override,omitempty" parquet:"dmarc_override,optional"`

	// DMARC Policy: The Domain-based Message Authentication, Reporting and Conformance (DMARC) policy status.
	DmarcPolicy *string `json:"dmarc_policy,omitempty" parquet:"dmarc_policy,optional"`

	// SPF Status: The Sender Policy Framework (SPF) status of the email.
	Spf *string `json:"spf,omitempty" parquet:"spf,optional"`
}

func (v *EmailAuthentication) Observable() (*int, string) {
	return nil, ""
}

var EmailAuthenticationFields = []arrow.Field{
	{Name: "dkim", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "dkim_domain", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "dkim_signature", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "dmarc", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "dmarc_override", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "dmarc_policy", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "spf", Type: arrow.BinaryTypes.String, Nullable: true},
}

var EmailAuthenticationStruct = arrow.StructOf(EmailAuthenticationFields...)

var EmailAuthenticationSchema = arrow.NewSchema(EmailAuthenticationFields, nil)
var EmailAuthenticationClassname = "email_auth"
