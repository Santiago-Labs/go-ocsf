// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type JA4Fingerprint struct {

	// JA4 Section A: The 'a' section of the JA4 fingerprint.
	SectionA *string `json:"section_a,omitempty" parquet:"section_a,optional"`

	// JA4 Section B: The 'b' section of the JA4 fingerprint.
	SectionB *string `json:"section_b,omitempty" parquet:"section_b,optional"`

	// JA4 Section C: The 'c' section of the JA4 fingerprint.
	SectionC *string `json:"section_c,omitempty" parquet:"section_c,optional"`

	// JA4 Section D: The 'd' section of the JA4 fingerprint.
	SectionD *string `json:"section_d,omitempty" parquet:"section_d,optional"`

	// Type: The JA4+ fingerprint type as defined by <a href='https://blog.foxio.io/ja4+-network-fingerprinting target='_blank'>FoxIO</a>, normalized to the caption of 'type_id'. In the case of 'Other', it is defined by the event source.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Type ID: The identifier of the JA4+ fingerprint type.
	TypeId int32 `json:"type_id" parquet:"type_id"`

	// Value: The JA4+ fingerprint value.
	Value string `json:"value" parquet:"value"`
}

func (v *JA4Fingerprint) Observable() (*int, string) {
	return nil, ""
}

var JA4FingerprintFields = []arrow.Field{
	{Name: "section_a", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "section_b", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "section_c", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "section_d", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: false},
	{Name: "value", Type: arrow.BinaryTypes.String, Nullable: false},
}

var JA4FingerprintStruct = arrow.StructOf(JA4FingerprintFields...)

var JA4FingerprintSchema = arrow.NewSchema(JA4FingerprintFields, nil)
var JA4FingerprintClassname = "ja4_fingerprint"
