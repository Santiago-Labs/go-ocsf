// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Observation struct {

	// Count: Integer representing the total number of times this specific value/event was observed across all occurrences. Helps establish prevalence and patterns.
	Count *int32 `json:"count,omitempty" parquet:"count,optional"`

	// Time Span: The time window when the value or event was first observed. It is used to analyze activity patterns, detect trends, or correlate events within a specific timeframe.
	Timespan *TimeSpan `json:"timespan,omitempty" parquet:"timespan,optional"`

	// Value: The specific value, event, indicator or data point that was observed and recorded. This is the core piece of information being tracked.
	Value string `json:"value" parquet:"value"`
}

var ObservationFields = []arrow.Field{
	{Name: "count", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "timespan", Type: TimeSpanStruct, Nullable: true},
	{Name: "value", Type: arrow.BinaryTypes.String, Nullable: false},
}

var ObservationStruct = arrow.StructOf(ObservationFields...)

var ObservationSchema = arrow.NewSchema(ObservationFields, nil)
