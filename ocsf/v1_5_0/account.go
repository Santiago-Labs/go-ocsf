// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Account struct {

	// Labels: The list of labels associated to the account.
	Labels []string `json:"labels,omitempty" parquet:"labels,list,optional"`

	// Name: The name of the account (e.g. <code> GCP Project name </code>, <code> Linux Account name </code> or <code> AWS Account name</code>).
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Tags: The list of tags; <code>{key:value}</code> pairs associated to the account.
	Tags []KeyValueobject `json:"tags,omitempty" parquet:"tags,list,optional"`

	// Type: The account type, normalized to the caption of 'account_type_id'. In the case of 'Other', it is defined by the event source.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Type ID: The normalized account type identifier.
	TypeId *int32 `json:"type_id,omitempty" parquet:"type_id,optional"`

	// Unique ID: The unique identifier of the account (e.g. <code> AWS Account ID </code>, <code> OCID </code>, <code> GCP Project ID </code>, <code> Azure Subscription ID </code>, <code> Google Workspace Customer ID </code>, or <code> M365 Tenant UID</code>).
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`
}

func (v *Account) Observable() (*int, string) {
	return nil, ""
}

var AccountFields = []arrow.Field{
	{Name: "labels", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "tags", Type: arrow.ListOf(KeyValueobjectStruct), Nullable: true},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
}

var AccountStruct = arrow.StructOf(AccountFields...)

var AccountSchema = arrow.NewSchema(AccountFields, nil)
var AccountClassname = "account"
