// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type TransformationInfo struct {

	// Language: The transformation language used to transform the data.
	Lang *string `json:"lang,omitempty" parquet:"lang,optional"`

	// Name: The name of the transformation or mapping.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Product: The product or instance used to make the transformation
	Product *Product `json:"product,omitempty" parquet:"product,optional"`

	// Event Time: Time of the transformation.
	Time *int64 `json:"time,omitempty" parquet:"time,optional"`

	// Unique ID: The unique identifier of the mapping or transformation.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// URL String: The Uniform Resource Locator String where the mapping or transformation exists.
	UrlString *string `json:"url_string,omitempty" parquet:"url_string,optional"`
}

var TransformationInfoFields = []arrow.Field{
	{Name: "lang", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "product", Type: ProductStruct, Nullable: true},
	{Name: "time", Type: arrow.PrimitiveTypes.Int64, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "url_string", Type: arrow.BinaryTypes.String, Nullable: true},
}

var TransformationInfoStruct = arrow.StructOf(TransformationInfoFields...)

var TransformationInfoSchema = arrow.NewSchema(TransformationInfoFields, nil)
