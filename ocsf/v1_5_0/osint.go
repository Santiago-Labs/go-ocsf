// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type OSINT struct {

	// Related DNS Answers: Any pertinent DNS answers information related to an indicator or OSINT analysis.
	Answers []*DNSAnswer `json:"answers,omitempty" parquet:"answers,optional,list"`

	// MITRE ATT&CK® and ATLAS™ Details: MITRE ATT&CK Tactics, Techniques, and/or Procedures (TTPs) pertinent to an indicator or OSINT analysis.
	Attacks []*MITREATTCKATLAS `json:"attacks,omitempty" parquet:"attacks,optional,list"`

	// Autonomous System: Any pertinent autonomous system information related to an indicator or OSINT analysis.
	AutonomousSystem *AutonomousSystem `json:"autonomous_system,omitempty" parquet:"autonomous_system,optional"`

	// Campaign: The campaign object describes details about the campaign that was the source of the activity.
	Campaign *Campaign `json:"campaign,omitempty" parquet:"campaign,optional"`

	// Category: Categorizes the threat indicator based on its functional or operational role.
	Category *string `json:"category,omitempty" parquet:"category,optional"`

	// Analyst Comments: Analyst commentary or source commentary about an indicator or OSINT analysis.
	Comment *string `json:"comment,omitempty" parquet:"comment,optional"`

	// Confidence: The confidence of an indicator being malicious and/or pertinent, normalized to the caption of the confidence_id value. In the case of 'Other', it is defined by the event source or analyst.
	Confidence *string `json:"confidence,omitempty" parquet:"confidence,optional"`

	// Confidence ID: The normalized confidence refers to the accuracy of collected information related to the OSINT or how pertinent an indicator or analysis is to a specific event or finding. A low confidence means that the information collected or analysis conducted lacked detail or is not accurate enough to qualify an indicator as fully malicious.
	ConfidenceId *int32 `json:"confidence_id,omitempty" parquet:"confidence_id,optional"`

	// Created Time: The timestamp when the indicator was initially created or identified.
	CreatedTime *int64 `json:"created_time,omitempty" parquet:"created_time,optional"`

	// Creator: The identifier of the user, system, or organization that contributed the indicator.
	Creator *User `json:"creator,omitempty" parquet:"creator,optional"`

	// Description: A detailed explanation of the indicator, including its context, purpose, and relevance.
	Desc *string `json:"desc,omitempty" parquet:"desc,optional"`

	// Detection Pattern: The specific detection pattern or signature associated with the indicator.
	DetectionPattern *string `json:"detection_pattern,omitempty" parquet:"detection_pattern,optional"`

	// Detection Pattern: The detection pattern type, normalized to the caption of the detection_pattern_type_id value. In the case of 'Other', it is defined by the event source.
	DetectionPatternType *string `json:"detection_pattern_type,omitempty" parquet:"detection_pattern_type,optional"`

	// Detection Pattern Type ID: Specifies the type of detection pattern used to identify the associated threat indicator.
	DetectionPatternTypeId *int32 `json:"detection_pattern_type_id,omitempty" parquet:"detection_pattern_type_id,optional"`

	// Related Email: Any email information pertinent to an indicator or OSINT analysis.
	Email *Email `json:"email,omitempty" parquet:"email,optional"`

	// Related Email Authentication: Any email authentication information pertinent to an indicator or OSINT analysis.
	EmailAuth *EmailAuthentication `json:"email_auth,omitempty" parquet:"email_auth,optional"`

	// Expiration Time: The expiration date of the indicator, after which it is no longer considered reliable.
	ExpirationTime *int64 `json:"expiration_time,omitempty" parquet:"expiration_time,optional"`

	// External ID: A unique identifier assigned by an external system for cross-referencing.
	ExternalUid *string `json:"external_uid,omitempty" parquet:"external_uid,optional"`

	// Related File: Any pertinent file information related to an indicator or OSINT analysis.
	File *File `json:"file,omitempty" parquet:"file,optional"`

	// Intrusion Sets: A grouping of adversarial behaviors and resources believed to be associated with specific threat actors or campaigns. Intrusion sets often encompass multiple campaigns and are used to organize related activities under a common label.
	IntrusionSets []string `json:"intrusion_sets,omitempty" parquet:"intrusion_sets,optional,list"`

	// Kill Chain: Lockheed Martin Kill Chain Phases pertinent to an indicator or OSINT analysis.
	KillChain []*KillChainPhase `json:"kill_chain,omitempty" parquet:"kill_chain,optional,list"`

	// Labels: Tags or keywords associated with the indicator to enhance searchability.
	Labels []string `json:"labels,omitempty" parquet:"labels,optional,list"`

	// Geo Location: Any pertinent geolocation information related to an indicator or OSINT analysis.
	Location *GeoLocation `json:"location,omitempty" parquet:"location,optional"`

	// Malware: A list of Malware objects, describing details about the identified malware.
	Malware []*Malware `json:"malware,omitempty" parquet:"malware,optional,list"`

	// Modified Time: The timestamp of the last modification or update to the indicator.
	ModifiedTime *int64 `json:"modified_time,omitempty" parquet:"modified_time,optional"`

	// Name: The <code>name</code> is a pointer/reference to an attribute within the OCSF event data. For example: file.name.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// References: Provides a reference to an external source of information related to the CTI being represented. This may include a URL, a document, or some other type of reference that provides additional context or information about the CTI.
	References []string `json:"references,omitempty" parquet:"references,optional,list"`

	// Related Analytics: Any analytics related to an indicator or OSINT analysis.
	RelatedAnalytics []*Analytic `json:"related_analytics,omitempty" parquet:"related_analytics,optional,list"`

	// Reputation Scores: Related reputational analysis from third-party engines and analysts for a given indicator or OSINT analysis.
	Reputation *Reputation `json:"reputation,omitempty" parquet:"reputation,optional"`

	// Risk Score: A numerical representation of the threat indicator’s risk level.
	RiskScore *int32 `json:"risk_score,omitempty" parquet:"risk_score,optional"`

	// Related Script Data: Any pertinent script information related to an indicator or OSINT analysis.
	Script *Script `json:"script,omitempty" parquet:"script,optional"`

	// Severity: Represents the severity level of the threat indicator, typically reflecting its potential impact or damage.
	Severity *string `json:"severity,omitempty" parquet:"severity,optional"`

	// Severity ID: The normalized severity level of the threat indicator, typically reflecting its potential impact or damage.
	SeverityId *int32 `json:"severity_id,omitempty" parquet:"severity_id,optional"`

	// Related Digital Signatures: Any digital signatures or hashes related to an indicator or OSINT analysis.
	Signatures []*DigitalSignature `json:"signatures,omitempty" parquet:"signatures,optional,list"`

	// Source URL: The source URL of an indicator or OSINT analysis, e.g., a URL back to a TIP, report, or otherwise.
	SrcUrl *string `json:"src_url,omitempty" parquet:"src_url,optional"`

	// Related Subdomains: Any pertinent subdomain information - such as those generated by a Domain Generation Algorithm - related to an indicator or OSINT analysis.
	Subdomains []string `json:"subdomains,omitempty" parquet:"subdomains,optional,list"`

	// Related Subnet: A CIDR or network block related to an indicator or OSINT analysis.
	Subnet *string `json:"subnet,omitempty" parquet:"subnet,optional"`

	// Threat Actor: A threat actor is an individual or group that conducts malicious cyber activities, often with financial, political, or ideological motives.
	ThreatActor *ThreatActor `json:"threat_actor,omitempty" parquet:"threat_actor,optional"`

	// Traffic Light Protocol: The <a target='_blank' href='https://www.first.org/tlp/'>Traffic Light Protocol</a> was created to facilitate greater sharing of potentially sensitive information and more effective collaboration. TLP provides a simple and intuitive schema for indicating with whom potentially sensitive information can be shared.
	Tlp *string `json:"tlp,omitempty" parquet:"tlp,optional"`

	// Type: The OSINT indicator type.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Indicator Type ID: The OSINT indicator type ID.
	TypeId int32 `json:"type_id" parquet:"type_id"`

	// Unique ID: The unique identifier for the OSINT object.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// Uploaded Time: The timestamp indicating when the associated indicator or intelligence was added to the system or repository.
	UploadedTime *int64 `json:"uploaded_time,omitempty" parquet:"uploaded_time,optional"`

	// Indicator: The actual indicator value in scope, e.g., a SHA-256 hash hexdigest or a domain name.
	Value string `json:"value" parquet:"value"`

	// Vendor Name: The vendor name of a tool which generates intelligence or provides indicators.
	VendorName *string `json:"vendor_name,omitempty" parquet:"vendor_name,optional"`

	// Related Vulnerabilities: Any vulnerabilities related to an indicator or OSINT analysis.
	Vulnerabilities []*VulnerabilityDetails `json:"vulnerabilities,omitempty" parquet:"vulnerabilities,optional,list"`

	// WHOIS: Any pertinent WHOIS information related to an indicator or OSINT analysis.
	Whois *WHOIS `json:"whois,omitempty" parquet:"whois,optional"`
}

var OSINTFields = []arrow.Field{
	{Name: "answers", Type: arrow.ListOf(DNSAnswerStruct), Nullable: true},
	{Name: "attacks", Type: arrow.ListOf(MITREATTCKATLASStruct), Nullable: true},
	{Name: "autonomous_system", Type: AutonomousSystemStruct, Nullable: true},
	{Name: "campaign", Type: CampaignStruct, Nullable: true},
	{Name: "category", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "comment", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "confidence", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "confidence_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "created_time", Type: arrow.PrimitiveTypes.Int64, Nullable: true},
	{Name: "creator", Type: UserStruct, Nullable: true},
	{Name: "desc", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "detection_pattern", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "detection_pattern_type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "detection_pattern_type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "email", Type: EmailStruct, Nullable: true},
	{Name: "email_auth", Type: EmailAuthenticationStruct, Nullable: true},
	{Name: "expiration_time", Type: arrow.PrimitiveTypes.Int64, Nullable: true},
	{Name: "external_uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "file", Type: FileStruct, Nullable: true},
	{Name: "intrusion_sets", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "kill_chain", Type: arrow.ListOf(KillChainPhaseStruct), Nullable: true},
	{Name: "labels", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "location", Type: GeoLocationStruct, Nullable: true},
	{Name: "malware", Type: arrow.ListOf(MalwareStruct), Nullable: true},
	{Name: "modified_time", Type: arrow.PrimitiveTypes.Int64, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "references", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "related_analytics", Type: arrow.ListOf(AnalyticStruct), Nullable: true},
	{Name: "reputation", Type: ReputationStruct, Nullable: true},
	{Name: "risk_score", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "script", Type: ScriptStruct, Nullable: true},
	{Name: "severity", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "severity_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "signatures", Type: arrow.ListOf(DigitalSignatureStruct), Nullable: true},
	{Name: "src_url", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "subdomains", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "subnet", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "threat_actor", Type: ThreatActorStruct, Nullable: true},
	{Name: "tlp", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: false},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uploaded_time", Type: arrow.PrimitiveTypes.Int64, Nullable: true},
	{Name: "value", Type: arrow.BinaryTypes.String, Nullable: false},
	{Name: "vendor_name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "vulnerabilities", Type: arrow.ListOf(VulnerabilityDetailsStruct), Nullable: true},
	{Name: "whois", Type: WHOISStruct, Nullable: true},
}

var OSINTStruct = arrow.StructOf(OSINTFields...)

var OSINTSchema = arrow.NewSchema(OSINTFields, nil)
