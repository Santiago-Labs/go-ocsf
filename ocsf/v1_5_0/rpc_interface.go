// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type RPCInterface struct {

	// Acknowledgement Reason: An integer that provides a reason code or additional information about the acknowledgment result.
	AckReason *int32 `json:"ack_reason,omitempty" parquet:"ack_reason,optional"`

	// Acknowledgement Result: An integer that denotes the acknowledgment result of the DCE/RPC call.
	AckResult *int32 `json:"ack_result,omitempty" parquet:"ack_result,optional"`

	// UUID: The unique identifier of the particular remote procedure or service.
	Uuid string `json:"uuid" parquet:"uuid"`

	// Version: The version of the DCE/RPC protocol being used in the session.
	Version string `json:"version" parquet:"version"`
}

var RPCInterfaceFields = []arrow.Field{
	{Name: "ack_reason", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "ack_result", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "uuid", Type: arrow.BinaryTypes.String, Nullable: false},
	{Name: "version", Type: arrow.BinaryTypes.String, Nullable: false},
}

var RPCInterfaceStruct = arrow.StructOf(RPCInterfaceFields...)

var RPCInterfaceSchema = arrow.NewSchema(RPCInterfaceFields, nil)
