// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Baseline struct {

	// Observation Parameter: The specific parameter or property being monitored. Examples include: CPU usage percentage, API response time in milliseconds, HTTP error rate, memory utilization, network latency, transaction volume, etc.
	ObservationParameter string `json:"observation_parameter" parquet:"observation_parameter"`

	// Observation Type: The type of analysis being performed to establish baseline behavior. Common types include: Frequency Analysis, Time Pattern Analysis, Volume Analysis, Sequence Analysis, Distribution Analysis, etc.
	ObservationType *string `json:"observation_type,omitempty" parquet:"observation_type,optional"`

	// Observations: Collection of actual measured values, data points and observations recorded for this baseline.
	Observations []Observation `json:"observations" parquet:"observations,list"`

	// Observed Pattern: The specific pattern identified within the observation type. For Frequency Analysis, this could be 'FREQUENT', 'INFREQUENT', 'RARE', or 'UNSEEN'. For Time Pattern Analysis, this could be 'BUSINESS_HOURS', 'OFF_HOURS', or 'UNUSUAL_TIME'. For Volume Analysis, this could be 'NORMAL_VOLUME', 'HIGH_VOLUME', or 'SURGE'. The pattern values are specific to each observation type and indicate the baseline behavior.
	ObservedPattern *string `json:"observed_pattern,omitempty" parquet:"observed_pattern,optional"`
}

func (v *Baseline) Observable() (*int, string) {
	return nil, ""
}

var BaselineFields = []arrow.Field{
	{Name: "observation_parameter", Type: arrow.BinaryTypes.String, Nullable: false},
	{Name: "observation_type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "observations", Type: arrow.ListOf(ObservationStruct), Nullable: false},
	{Name: "observed_pattern", Type: arrow.BinaryTypes.String, Nullable: true},
}

var BaselineStruct = arrow.StructOf(BaselineFields...)

var BaselineSchema = arrow.NewSchema(BaselineFields, nil)
var BaselineClassname = "baseline"
