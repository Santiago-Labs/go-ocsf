// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Product struct {

	// The product CPE identifier: The Common Platform Enumeration (CPE) name as described by (<a target='_blank' href='https://nvd.nist.gov/products/cpe'>NIST</a>) For example: <code>cpe:/a:apple:safari:16.2</code>.
	CpeName *string `json:"cpe_name,omitempty" parquet:"cpe_name,optional"`

	// Data Classification: A list of Data Classification objects, that include information about data classification levels and data category types, indentified by a classifier.
	DataClassifications []DataClassification `json:"data_classifications,omitempty" parquet:"data_classifications,list,optional"`

	// Feature: The feature that reported the event.
	Feature *Feature `json:"feature,omitempty" parquet:"feature,optional"`

	// Language: The two letter lower case language codes, as defined by <a target='_blank' href='https://en.wikipedia.org/wiki/ISO_639-1'>ISO 639-1</a>. For example: <code>en</code> (English), <code>de</code> (German), or <code>fr</code> (French).
	Lang *string `json:"lang,omitempty" parquet:"lang,optional"`

	// Name: The name of the product.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Path: The installation path of the product.
	Path *string `json:"path,omitempty" parquet:"path,optional"`

	// Unique ID: The unique identifier of the product.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// URL String: The URL pointing towards the product.
	UrlString *string `json:"url_string,omitempty" parquet:"url_string,optional"`

	// Vendor Name: The name of the vendor of the product.
	VendorName *string `json:"vendor_name,omitempty" parquet:"vendor_name,optional"`

	// Version: The version of the product, as defined by the event source. For example: <code>2013.1.3-beta</code>.
	Version *string `json:"version,omitempty" parquet:"version,optional"`
}

func (v *Product) Observable() (*int, string) {
	return nil, ""
}

var ProductFields = []arrow.Field{
	{Name: "cpe_name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "data_classifications", Type: arrow.ListOf(DataClassificationStruct), Nullable: true},
	{Name: "feature", Type: FeatureStruct, Nullable: true},
	{Name: "lang", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "path", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "url_string", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "vendor_name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "version", Type: arrow.BinaryTypes.String, Nullable: true},
}

var ProductStruct = arrow.StructOf(ProductFields...)

var ProductSchema = arrow.NewSchema(ProductFields, nil)
var ProductClassname = "product"
