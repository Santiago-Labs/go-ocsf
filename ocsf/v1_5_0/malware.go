// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Malware struct {

	// Classification IDs: The list of normalized identifiers of the malware classifications.
	ClassificationIds []int32 `json:"classification_ids" parquet:"classification_ids,list"`

	// Classifications: The list of malware classifications, normalized to the captions of the <code>classification_ids</code> values. In the case of 'Other', they are defined by the event source.
	Classifications []string `json:"classifications,omitempty" parquet:"classifications,optional,list"`

	// CVE List: The list of Common Vulnerabilities and Exposures (CVE) identifiers associated with the malware. Reference: <a target='_blank' href='https://cve.mitre.org/'>CVE</a>
	Cves []*CVE `json:"cves,omitempty" parquet:"cves,optional,list"`

	// Files: The list of file objects representing files that were identified as infected by the malware.
	Files []*File `json:"files,omitempty" parquet:"files,optional,list"`

	// Name: The malware name, as reported by the detection engine.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Number of Infected Entities: The number of files that were identified to be infected by the malware.
	NumInfected *int32 `json:"num_infected,omitempty" parquet:"num_infected,optional"`

	// Provider: The name or identifier of the security solution or service that provided the malware detection information.
	Provider *string `json:"provider,omitempty" parquet:"provider,optional"`

	// Severity: The severity of the malware, normalized to the captions of the <code>severity_id</code> values. In the case of 'Other', they are defined by the event source.
	Severity *string `json:"severity,omitempty" parquet:"severity,optional"`

	// Severity ID: The normalized identifier of the malware severity.
	SeverityId *int32 `json:"severity_id,omitempty" parquet:"severity_id,optional"`

	// Unique ID: A unique identifier for the specific malware instance, as assigned by the detection engine (e.g., virus signature ID or IPS rule ID).
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`
}

var MalwareFields = []arrow.Field{
	{Name: "classification_ids", Type: arrow.ListOf(arrow.PrimitiveTypes.Int32), Nullable: false},
	{Name: "classifications", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "cves", Type: arrow.ListOf(CVEStruct), Nullable: true},
	{Name: "files", Type: arrow.ListOf(FileStruct), Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "num_infected", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "provider", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "severity", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "severity_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
}

var MalwareStruct = arrow.StructOf(MalwareFields...)

var MalwareSchema = arrow.NewSchema(MalwareFields, nil)
