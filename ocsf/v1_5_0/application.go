// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Application struct {

	// Business Criticality: The criticality of the application as defined by the event source.
	Criticality *string `json:"criticality,omitempty" parquet:"criticality,optional"`

	// Data: Additional data describing the application.
	Data *string `json:"data,omitempty" parquet:"data,optional"`

	// Application Description: A description or commentary for an application, usually retrieved from an upstream system.
	Desc *string `json:"desc,omitempty" parquet:"desc,optional"`

	// Group: The name of the related application or associated resource group.
	Group *Group `json:"group,omitempty" parquet:"group,optional"`

	// Hostname: The fully qualified name of the application.
	Hostname *string `json:"hostname,omitempty" parquet:"hostname,optional"`

	// Labels: The list of labels associated to the application.
	Labels []string `json:"labels,omitempty" parquet:"labels,list,optional"`

	// Application Name: The name of the application.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Owner: The identity of the service or user account that owns the application.
	Owner *User `json:"owner,omitempty" parquet:"owner,optional"`

	// Region: The cloud region of the resource.
	Region *string `json:"region,omitempty" parquet:"region,optional"`

	// Application Relationship: A graph representation showing how this application relates to and interacts with other entities in the environment. This can include parent/child relationships, dependencies, or other connections.
	ResourceRelationship *Graph `json:"resource_relationship,omitempty" parquet:"resource_relationship,optional"`

	// Risk Level: The risk level, normalized to the caption of the risk_level_id value.
	RiskLevel *string `json:"risk_level,omitempty" parquet:"risk_level,optional"`

	// Risk Level ID: The normalized risk level id.
	RiskLevelId *int32 `json:"risk_level_id,omitempty" parquet:"risk_level_id,optional"`

	// Risk Score: The risk score as reported by the event source.
	RiskScore *int32 `json:"risk_score,omitempty" parquet:"risk_score,optional"`

	// Related SBOM: The Software Bill of Materials (SBOM) associated with the application
	Sbom *SoftwareBillofMaterials `json:"sbom,omitempty" parquet:"sbom,optional"`

	// Tags: The list of tags; <code>{key:value}</code> pairs associated to the application.
	Tags []KeyValueobject `json:"tags,omitempty" parquet:"tags,list,optional"`

	// Application Type: The type of application as defined by the event source, e.g., <code>GitHub</code>, <code>Azure Logic App</code>, or <code>Amazon Elastic BeanStalk</code>.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Application ID: The unique identifier for the application.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// Application Alternative ID: An alternative or contextual identifier for the application, such as a configuration, organization, or license UID.
	UidAlt *string `json:"uid_alt,omitempty" parquet:"uid_alt,optional"`

	// URL: The URL of the application.
	Url *UniformResourceLocator `json:"url,omitempty" parquet:"url,optional"`

	// Application Version: The semantic version of the application, e.g., <code>1.7.4</code>.
	Version *string `json:"version,omitempty" parquet:"version,optional"`
}

func (v *Application) Observable() (*int, string) {
	return nil, ""
}

var ApplicationFields = []arrow.Field{
	{Name: "criticality", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "data", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "desc", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "group", Type: GroupStruct, Nullable: true},
	{Name: "hostname", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "labels", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "owner", Type: UserStruct, Nullable: true},
	{Name: "region", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "resource_relationship", Type: GraphStruct, Nullable: true},
	{Name: "risk_level", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "risk_level_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "risk_score", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "sbom", Type: SoftwareBillofMaterialsStruct, Nullable: true},
	{Name: "tags", Type: arrow.ListOf(KeyValueobjectStruct), Nullable: true},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid_alt", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "url", Type: UniformResourceLocatorStruct, Nullable: true},
	{Name: "version", Type: arrow.BinaryTypes.String, Nullable: true},
}

var ApplicationStruct = arrow.StructOf(ApplicationFields...)

var ApplicationSchema = arrow.NewSchema(ApplicationFields, nil)
var ApplicationClassname = "application"
