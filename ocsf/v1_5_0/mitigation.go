// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type MITREMitigation struct {

	// Countermeasures: The D3FEND countermeasures that are associated with the attack technique. For example: ATT&CK Technique <code>T1003</code> is addressed by Mitigation <code>M1027</code>, and D3FEND Technique <code>D3-OTP</code>.
	Countermeasures []MITRED3FEND `json:"countermeasures,omitempty" parquet:"countermeasures,list,optional"`

	// Name: The Mitigation name that is associated with the attack technique. For example: <code>Password Policies</code>, or <code>Code Signing</code>.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Source URL: The versioned permalink of the Mitigation. For example: <code>https://attack.mitre.org/versions/v14/mitigations/M1027</code>.
	SrcUrl *string `json:"src_url,omitempty" parquet:"src_url,optional"`

	// Unique ID: The Mitigation ID that is associated with the attack technique. For example: <code>M1027</code>, or <code>AML.M0013</code>.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`
}

func (v *MITREMitigation) Observable() (*int, string) {
	return nil, ""
}

var MITREMitigationFields = []arrow.Field{
	{Name: "countermeasures", Type: arrow.ListOf(MITRED3FENDStruct), Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "src_url", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
}

var MITREMitigationStruct = arrow.StructOf(MITREMitigationFields...)

var MITREMitigationSchema = arrow.NewSchema(MITREMitigationFields, nil)
var MITREMitigationClassname = "mitigation"
