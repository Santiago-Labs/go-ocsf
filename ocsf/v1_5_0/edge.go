// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Edge struct {

	// Data: Additional data about the edge such as weight, distance, or custom properties.
	Data *string `json:"data,omitempty" parquet:"data,optional"`

	// Directed: Indicates whether the edge is (<code>true</code>) or undirected (<code>false</code>).
	IsDirected *bool `json:"is_directed,omitempty" parquet:"is_directed,optional"`

	// Name: The human-readable name or label for the edge.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Relation: The type of relationship between nodes (e.g. is-attached-to , depends-on, etc).
	Relation *string `json:"relation,omitempty" parquet:"relation,optional"`

	// Source: The unique identifier of the node where the edge originates.
	Source string `json:"source" parquet:"source"`

	// Target: The unique identifier of the node where the edge terminates.
	Target string `json:"target" parquet:"target"`

	// Unique ID: Unique identifier of the edge.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`
}

var EdgeFields = []arrow.Field{
	{Name: "data", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "is_directed", Type: arrow.FixedWidthTypes.Boolean, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "relation", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "source", Type: arrow.BinaryTypes.String, Nullable: false},
	{Name: "target", Type: arrow.BinaryTypes.String, Nullable: false},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
}

var EdgeStruct = arrow.StructOf(EdgeFields...)

var EdgeSchema = arrow.NewSchema(EdgeFields, nil)
