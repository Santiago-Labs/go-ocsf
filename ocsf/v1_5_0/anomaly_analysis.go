// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_5_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type AnomalyAnalysis struct {

	// Analysis Targets: The analysis targets define the scope of monitored activities, specifying what entities, systems or processes are analyzed for activity patterns.
	AnalysisTargets []AnalysisTarget `json:"analysis_targets" parquet:"analysis_targets,list"`

	// Anomalies: List of detected activities that significantly deviate from the established baselines. This can include unusual access patterns, unexpected user-agents, abnormal API usage, suspicious traffic spikes, unauthorized access attempts, and other activities that may indicate potential security threats or system issues.
	Anomalies []Anomaly `json:"anomalies" parquet:"anomalies,list"`

	// Baselines: List of established patterns representing normal activity that serve as reference points for anomaly detection. This includes typical user interaction patterns like common user-agents, expected API access frequencies and patterns, standard resource utilization levels, and regular traffic flows. These baselines help establish what constitutes 'normal' activity in the system.
	Baselines []*Baseline `json:"baselines,omitempty" parquet:"baselines,optional,list"`
}

var AnomalyAnalysisFields = []arrow.Field{
	{Name: "analysis_targets", Type: arrow.ListOf(AnalysisTargetStruct), Nullable: false},
	{Name: "anomalies", Type: arrow.ListOf(AnomalyStruct), Nullable: false},
	{Name: "baselines", Type: arrow.ListOf(BaselineStruct), Nullable: true},
}

var AnomalyAnalysisStruct = arrow.StructOf(AnomalyAnalysisFields...)

var AnomalyAnalysisSchema = arrow.NewSchema(AnomalyAnalysisFields, nil)
