// autogenerated by scripts/model_gen.go. DO NOT EDIT
package ocsf

type File struct {
	Accessor            *User                   `json:"accessor,omitempty" parquet:"accessor,optional"`
	DriveTypeId         *int32                  `json:"drive_type_id,omitempty" parquet:"drive_type_id,optional"`
	Modifier            *User                   `json:"modifier,omitempty" parquet:"modifier,optional"`
	Owner               *User                   `json:"owner,omitempty" parquet:"owner,optional"`
	Path                *string                 `json:"path,omitempty" parquet:"path,optional"`
	Product             *Product                `json:"product,omitempty" parquet:"product,optional"`
	Signature           *DigitalSignature       `json:"signature,omitempty" parquet:"signature,optional"`
	Type                *string                 `json:"type,omitempty" parquet:"type,optional"`
	DriveType           *string                 `json:"drive_type,omitempty" parquet:"drive_type,optional"`
	IsPublic            *bool                   `json:"is_public,omitempty" parquet:"is_public,optional"`
	IsSystem            *bool                   `json:"is_system,omitempty" parquet:"is_system,optional"`
	MimeType            *string                 `json:"mime_type,omitempty" parquet:"mime_type,optional"`
	ParentFolder        *string                 `json:"parent_folder,omitempty" parquet:"parent_folder,optional"`
	TypeId              int32                   `json:"type_id" parquet:"type_id"`
	Uid                 *string                 `json:"uid,omitempty" parquet:"uid,optional"`
	CreatedTime         *int64                  `json:"created_time,omitempty" parquet:"created_time,optional"`
	SecurityDescriptor  *string                 `json:"security_descriptor,omitempty" parquet:"security_descriptor,optional"`
	Version             *string                 `json:"version,omitempty" parquet:"version,optional"`
	InternalName        *string                 `json:"internal_name,omitempty" parquet:"internal_name,optional"`
	Name                string                  `json:"name" parquet:"name"`
	Url                 *UniformResourceLocator `json:"url,omitempty" parquet:"url,optional"`
	Desc                *string                 `json:"desc,omitempty" parquet:"desc,optional"`
	EncryptionDetails   *EncryptionDetails      `json:"encryption_details,omitempty" parquet:"encryption_details,optional"`
	Size                *int64                  `json:"size,omitempty" parquet:"size,optional"`
	DataClassifications []*DataClassification   `json:"data_classifications,omitempty" parquet:"data_classifications,optional,list"`
	CompanyName         *string                 `json:"company_name,omitempty" parquet:"company_name,optional"`
	Confidentiality     *string                 `json:"confidentiality,omitempty" parquet:"confidentiality,optional"`
	Creator             *User                   `json:"creator,omitempty" parquet:"creator,optional"`
	ModifiedTime        *int64                  `json:"modified_time,omitempty" parquet:"modified_time,optional"`
	StorageClass        *string                 `json:"storage_class,omitempty" parquet:"storage_class,optional"`
	Xattributes         *string                 `json:"xattributes,omitempty" parquet:"xattributes,optional"`
	AccessedTime        *int64                  `json:"accessed_time,omitempty" parquet:"accessed_time,optional"`
	IsDeleted           *bool                   `json:"is_deleted,omitempty" parquet:"is_deleted,optional"`
	Tags                []*KeyValueobject       `json:"tags,omitempty" parquet:"tags,optional,list"`
	Attributes          *int32                  `json:"attributes,omitempty" parquet:"attributes,optional"`
	ConfidentialityId   *int32                  `json:"confidentiality_id,omitempty" parquet:"confidentiality_id,optional"`
	Ext                 *string                 `json:"ext,omitempty" parquet:"ext,optional"`
	Hashes              []*Fingerprint          `json:"hashes,omitempty" parquet:"hashes,optional,list"`
	IsEncrypted         *bool                   `json:"is_encrypted,omitempty" parquet:"is_encrypted,optional"`
}
