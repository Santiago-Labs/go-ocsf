// autogenerated by scripts/model_gen.go. DO NOT EDIT
package ocsf

type NetworksQuery struct {
	ClassUid          int32              `json:"class_uid" parquet:"class_uid"`
	Duration          *int64             `json:"duration,omitempty" parquet:"duration,optional"`
	Observables       []*Observable      `json:"observables,omitempty" parquet:"observables,optional,list"`
	Time              int64              `json:"time" parquet:"time"`
	Enrichments       []*Enrichment      `json:"enrichments,omitempty" parquet:"enrichments,optional,list"`
	SeverityId        int32              `json:"severity_id" parquet:"severity_id"`
	StartTime         *int64             `json:"start_time,omitempty" parquet:"start_time,optional"`
	StatusId          *int32             `json:"status_id,omitempty" parquet:"status_id,optional"`
	TimezoneOffset    *int32             `json:"timezone_offset,omitempty" parquet:"timezone_offset,optional"`
	TypeUid           int64              `json:"type_uid" parquet:"type_uid"`
	NetworkInterfaces []NetworkInterface `json:"network_interfaces" parquet:"network_interfaces,list"`
	ActivityId        int32              `json:"activity_id" parquet:"activity_id"`
	Count             *int32             `json:"count,omitempty" parquet:"count,optional"`
	RawData           *string            `json:"raw_data,omitempty" parquet:"raw_data,optional"`
	StatusDetail      *string            `json:"status_detail,omitempty" parquet:"status_detail,optional"`
	Unmapped          *string            `json:"unmapped,omitempty" parquet:"unmapped,optional"`
	QueryInfo         *QueryInformation  `json:"query_info,omitempty" parquet:"query_info,optional"`
	EndTime           *int64             `json:"end_time,omitempty" parquet:"end_time,optional"`
	Metadata          Metadata           `json:"metadata" parquet:"metadata"`
	ActivityName      *string            `json:"activity_name,omitempty" parquet:"activity_name,optional"`
	Message           *string            `json:"message,omitempty" parquet:"message,optional"`
	Status            *string            `json:"status,omitempty" parquet:"status,optional"`
	QueryResultId     int32              `json:"query_result_id" parquet:"query_result_id"`
	CategoryName      *string            `json:"category_name,omitempty" parquet:"category_name,optional"`
	CategoryUid       int32              `json:"category_uid" parquet:"category_uid"`
	StatusCode        *string            `json:"status_code,omitempty" parquet:"status_code,optional"`
	QueryResult       *string            `json:"query_result,omitempty" parquet:"query_result,optional"`
	ClassName         *string            `json:"class_name,omitempty" parquet:"class_name,optional"`
	Severity          *string            `json:"severity,omitempty" parquet:"severity,optional"`
	TypeName          *string            `json:"type_name,omitempty" parquet:"type_name,optional"`
}
