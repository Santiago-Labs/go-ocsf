// autogenerated by scripts/model_gen.go. DO NOT EDIT
package ocsf

type UnmannedSystemOperatingArea struct {
	Locations                []*GeoLocation `json:"locations,omitempty" parquet:"locations,optional,list"`
	IsOnPremises             *bool          `json:"is_on_premises,omitempty" parquet:"is_on_premises,optional"`
	Radius                   *string        `json:"radius,omitempty" parquet:"radius,optional"`
	Country                  *string        `json:"country,omitempty" parquet:"country,optional"`
	Lat                      *float64       `json:"lat,omitempty" parquet:"lat,optional"`
	PostalCode               *string        `json:"postal_code,omitempty" parquet:"postal_code,optional"`
	AltitudeCeiling          *string        `json:"altitude_ceiling,omitempty" parquet:"altitude_ceiling,optional"`
	Desc                     *string        `json:"desc,omitempty" parquet:"desc,optional"`
	HorizontalAccuracy       *string        `json:"horizontal_accuracy,omitempty" parquet:"horizontal_accuracy,optional"`
	Continent                *string        `json:"continent,omitempty" parquet:"continent,optional"`
	AerialHeight             *string        `json:"aerial_height,omitempty" parquet:"aerial_height,optional"`
	City                     *string        `json:"city,omitempty" parquet:"city,optional"`
	GeodeticVerticalAccuracy *string        `json:"geodetic_vertical_accuracy,omitempty" parquet:"geodetic_vertical_accuracy,optional"`
	Long                     *float64       `json:"long,omitempty" parquet:"long,optional"`
	Provider                 *string        `json:"provider,omitempty" parquet:"provider,optional"`
	Type                     *string        `json:"type,omitempty" parquet:"type,optional"`
	Geohash                  *string        `json:"geohash,omitempty" parquet:"geohash,optional"`
	Count                    *int32         `json:"count,omitempty" parquet:"count,optional"`
	TypeId                   *int32         `json:"type_id,omitempty" parquet:"type_id,optional"`
	PressureAltitude         *string        `json:"pressure_altitude,omitempty" parquet:"pressure_altitude,optional"`
	Region                   *string        `json:"region,omitempty" parquet:"region,optional"`
	StartTime                *int64         `json:"start_time,omitempty" parquet:"start_time,optional"`
	GeodeticAltitude         *string        `json:"geodetic_altitude,omitempty" parquet:"geodetic_altitude,optional"`
	Isp                      *string        `json:"isp,omitempty" parquet:"isp,optional"`
	AltitudeFloor            *string        `json:"altitude_floor,omitempty" parquet:"altitude_floor,optional"`
	EndTime                  *int64         `json:"end_time,omitempty" parquet:"end_time,optional"`
}
