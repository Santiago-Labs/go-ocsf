// autogenerated by scripts/model_gen.go. DO NOT EDIT
package ocsf

type Authentication struct {
	LogonType      *string                 `json:"logon_type,omitempty" parquet:"logon_type,optional"`
	ActivityName   *string                 `json:"activity_name,omitempty" parquet:"activity_name,optional"`
	DstEndpoint    *NetworkEndpoint        `json:"dst_endpoint,omitempty" parquet:"dst_endpoint,optional"`
	IsCleartext    *bool                   `json:"is_cleartext,omitempty" parquet:"is_cleartext,optional"`
	IsMfa          *bool                   `json:"is_mfa,omitempty" parquet:"is_mfa,optional"`
	IsRemote       *bool                   `json:"is_remote,omitempty" parquet:"is_remote,optional"`
	Count          *int32                  `json:"count,omitempty" parquet:"count,optional"`
	EndTime        *int64                  `json:"end_time,omitempty" parquet:"end_time,optional"`
	SeverityId     int32                   `json:"severity_id" parquet:"severity_id"`
	AuthProtocolId *int32                  `json:"auth_protocol_id,omitempty" parquet:"auth_protocol_id,optional"`
	IsNewLogon     *bool                   `json:"is_new_logon,omitempty" parquet:"is_new_logon,optional"`
	User           User                    `json:"user" parquet:"user"`
	Duration       *int64                  `json:"duration,omitempty" parquet:"duration,optional"`
	StartTime      *int64                  `json:"start_time,omitempty" parquet:"start_time,optional"`
	TimezoneOffset *int32                  `json:"timezone_offset,omitempty" parquet:"timezone_offset,optional"`
	CategoryName   *string                 `json:"category_name,omitempty" parquet:"category_name,optional"`
	ClassUid       int32                   `json:"class_uid" parquet:"class_uid"`
	TypeName       *string                 `json:"type_name,omitempty" parquet:"type_name,optional"`
	LogonProcess   *Process                `json:"logon_process,omitempty" parquet:"logon_process,optional"`
	CategoryUid    int32                   `json:"category_uid" parquet:"category_uid"`
	Certificate    *DigitalCertificate     `json:"certificate,omitempty" parquet:"certificate,optional"`
	Enrichments    []*Enrichment           `json:"enrichments,omitempty" parquet:"enrichments,optional,list"`
	Metadata       Metadata                `json:"metadata" parquet:"metadata"`
	Time           int64                   `json:"time" parquet:"time"`
	Unmapped       *string                 `json:"unmapped,omitempty" parquet:"unmapped,optional"`
	Message        *string                 `json:"message,omitempty" parquet:"message,optional"`
	Status         *string                 `json:"status,omitempty" parquet:"status,optional"`
	StatusDetail   *string                 `json:"status_detail,omitempty" parquet:"status_detail,optional"`
	HttpResponse   *HTTPResponse           `json:"http_response,omitempty" parquet:"http_response,optional"`
	TypeUid        int64                   `json:"type_uid" parquet:"type_uid"`
	ActivityId     int32                   `json:"activity_id" parquet:"activity_id"`
	LogonTypeId    *int32                  `json:"logon_type_id,omitempty" parquet:"logon_type_id,optional"`
	SrcEndpoint    *NetworkEndpoint        `json:"src_endpoint,omitempty" parquet:"src_endpoint,optional"`
	RawData        *string                 `json:"raw_data,omitempty" parquet:"raw_data,optional"`
	StatusId       *int32                  `json:"status_id,omitempty" parquet:"status_id,optional"`
	Service        *Service                `json:"service,omitempty" parquet:"service,optional"`
	ClassName      *string                 `json:"class_name,omitempty" parquet:"class_name,optional"`
	Session        *Session                `json:"session,omitempty" parquet:"session,optional"`
	HttpRequest    *HTTPRequest            `json:"http_request,omitempty" parquet:"http_request,optional"`
	Severity       *string                 `json:"severity,omitempty" parquet:"severity,optional"`
	StatusCode     *string                 `json:"status_code,omitempty" parquet:"status_code,optional"`
	AuthFactors    []*AuthenticationFactor `json:"auth_factors,omitempty" parquet:"auth_factors,optional,list"`
	Observables    []*Observable           `json:"observables,omitempty" parquet:"observables,optional,list"`
	AuthProtocol   *string                 `json:"auth_protocol,omitempty" parquet:"auth_protocol,optional"`
}
