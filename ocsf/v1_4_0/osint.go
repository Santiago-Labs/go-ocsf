// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type OSINT struct {

	// Related DNS Answers: Any pertinent DNS answers information related to an indicator or OSINT analysis.
	Answers []*DNSAnswer `json:"answers,omitempty" parquet:"answers,optional,list"`

	// MITRE ATT&CKÂ® Details: MITRE ATT&CK Tactics, Techniques, and/or Procedures (TTPs) pertinent to an indicator or OSINT analysis.
	Attacks []*MITREATTCK `json:"attacks,omitempty" parquet:"attacks,optional,list"`

	// Autonomous System: Any pertinent autonomous system information related to an indicator or OSINT analysis.
	AutonomousSystem *AutonomousSystem `json:"autonomous_system,omitempty" parquet:"autonomous_system,optional"`

	// Analyst Comments: Analyst commentary or source commentary about an indicator or OSINT analysis.
	Comment *string `json:"comment,omitempty" parquet:"comment,optional"`

	// Confidence: The confidence of an indicator being malicious and/or pertinent, normalized to the caption of the confidence_id value. In the case of 'Other', it is defined by the event source or analyst.
	Confidence *string `json:"confidence,omitempty" parquet:"confidence,optional"`

	// Confidence ID: The normalized confidence refers to the accuracy of collected information related to the OSINT or how pertinent an indicator or analysis is to a specific event or finding. A low confidence means that the information collected or analysis conducted lacked detail or is not accurate enough to qualify an indicator as fully malicious.
	ConfidenceId *int32 `json:"confidence_id,omitempty" parquet:"confidence_id,optional"`

	// Related Email: Any email information pertinent to an indicator or OSINT analysis.
	Email *Email `json:"email,omitempty" parquet:"email,optional"`

	// Related Email Authentication: Any email authentication information pertinent to an indicator or OSINT analysis.
	EmailAuth *EmailAuthentication `json:"email_auth,omitempty" parquet:"email_auth,optional"`

	// Related File: Any pertinent file information related to an indicator or OSINT analysis.
	File *File `json:"file,omitempty" parquet:"file,optional"`

	// Kill Chain: Lockheed Martin Kill Chain Phases pertinent to an indicator or OSINT analysis.
	KillChain []*KillChainPhase `json:"kill_chain,omitempty" parquet:"kill_chain,optional,list"`

	// Geo Location: Any pertinent geolocation information related to an indicator or OSINT analysis.
	Location *GeoLocation `json:"location,omitempty" parquet:"location,optional"`

	// Name: The name of the entity.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Related Analytics: Any analytics related to an indicator or OSINT analysis.
	RelatedAnalytics []*Analytic `json:"related_analytics,omitempty" parquet:"related_analytics,optional,list"`

	// Reputation Scores: Related reputational analysis from third-party engines and analysts for a given indicator or OSINT analysis.
	Reputation *Reputation `json:"reputation,omitempty" parquet:"reputation,optional"`

	// Related Script Data: Any pertinent script information related to an indicator or OSINT analysis.
	Script *Script `json:"script,omitempty" parquet:"script,optional"`

	// Related Digital Signatures: Any digital signatures or hashes related to an indicator or OSINT analysis.
	Signatures []*DigitalSignature `json:"signatures,omitempty" parquet:"signatures,optional,list"`

	// Source URL: The source URL of an indicator or OSINT analysis, e.g., a URL back to a TIP, report, or otherwise.
	SrcUrl *string `json:"src_url,omitempty" parquet:"src_url,optional"`

	// Related Subdomains: Any pertinent subdomain information - such as those generated by a Domain Generation Algorithm - related to an indicator or OSINT analysis.
	Subdomains []string `json:"subdomains,omitempty" parquet:"subdomains,optional,list"`

	// Related Subnet: A CIDR or network block related to an indicator or OSINT analysis.
	Subnet *string `json:"subnet,omitempty" parquet:"subnet,optional"`

	// Traffic Light Protocol: The <a target='_blank' href='https://www.first.org/tlp/'>Traffic Light Protocol</a> was created to facilitate greater sharing of potentially sensitive information and more effective collaboration. TLP provides a simple and intuitive schema for indicating with whom potentially sensitive information can be shared.
	Tlp *string `json:"tlp,omitempty" parquet:"tlp,optional"`

	// Type: The OSINT indicator type.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Indicator Type ID: The OSINT indicator type ID.
	TypeId int32 `json:"type_id" parquet:"type_id"`

	// Unique ID: The unique identifier of the entity.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// Indicator: The actual indicator value in scope, e.g., a SHA-256 hash hexdigest or a domain name.
	Value string `json:"value" parquet:"value"`

	// Vendor Name: The vendor name of a tool which generates intelligence or provides indicators.
	VendorName *string `json:"vendor_name,omitempty" parquet:"vendor_name,optional"`

	// Related Vulnerabilities: Any vulnerabilities related to an indicator or OSINT analysis.
	Vulnerabilities []*VulnerabilityDetails `json:"vulnerabilities,omitempty" parquet:"vulnerabilities,optional,list"`

	// WHOIS: Any pertinent WHOIS information related to an indicator or OSINT analysis.
	Whois *WHOIS `json:"whois,omitempty" parquet:"whois,optional"`
}

var OSINTFields = []arrow.Field{
	{Name: "answers", Type: arrow.ListOf(DNSAnswerStruct), Nullable: true},
	{Name: "attacks", Type: arrow.ListOf(MITREATTCKStruct), Nullable: true},
	{Name: "autonomous_system", Type: AutonomousSystemStruct, Nullable: true},
	{Name: "comment", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "confidence", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "confidence_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "email", Type: EmailStruct, Nullable: true},
	{Name: "email_auth", Type: EmailAuthenticationStruct, Nullable: true},
	{Name: "file", Type: FileStruct, Nullable: true},
	{Name: "kill_chain", Type: arrow.ListOf(KillChainPhaseStruct), Nullable: true},
	{Name: "location", Type: GeoLocationStruct, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "related_analytics", Type: arrow.ListOf(AnalyticStruct), Nullable: true},
	{Name: "reputation", Type: ReputationStruct, Nullable: true},
	{Name: "script", Type: ScriptStruct, Nullable: true},
	{Name: "signatures", Type: arrow.ListOf(DigitalSignatureStruct), Nullable: true},
	{Name: "src_url", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "subdomains", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "subnet", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "tlp", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: false},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "value", Type: arrow.BinaryTypes.String, Nullable: false},
	{Name: "vendor_name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "vulnerabilities", Type: arrow.ListOf(VulnerabilityDetailsStruct), Nullable: true},
	{Name: "whois", Type: WHOISStruct, Nullable: true},
}

var OSINTStruct = arrow.StructOf(OSINTFields...)

var OSINTSchema = arrow.NewSchema(OSINTFields, nil)
