// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type HTTPResponse struct {

	// Response Body Length: The actual length of the HTTP response body, in number of bytes, independent of a potentially existing Content-Length header.
	BodyLength *int32 `json:"body_length,omitempty" parquet:"body_length,optional"`

	// Response Code: The Hypertext Transfer Protocol (HTTP) status code returned from the web server to the client. For example, 200.
	Code int32 `json:"code" parquet:"code"`

	// HTTP Content Type: The request header that identifies the original <a target='_blank' href='https://www.iana.org/assignments/media-types/media-types.xhtml'>media type </a> of the resource (prior to any content encoding applied for sending).
	ContentType *string `json:"content_type,omitempty" parquet:"content_type,optional"`

	// HTTP Headers: Additional HTTP headers of an HTTP request or response.
	HttpHeaders []HTTPHeader `json:"http_headers,omitempty" parquet:"http_headers,list,optional"`

	// Latency: The HTTP response latency measured in milliseconds.
	Latency *int32 `json:"latency,omitempty" parquet:"latency,optional"`

	// Response Length: The length of the entire HTTP response, in number of bytes.
	Length *int32 `json:"length,omitempty" parquet:"length,optional"`

	// Message: The description of the event/finding, as defined by the source.
	Message *string `json:"message,omitempty" parquet:"message,optional"`

	// Status: The response status. For example: A successful HTTP status of 'OK' which corresponds to a code of 200.
	Status *string `json:"status,omitempty" parquet:"status,optional"`
}

var HTTPResponseFields = []arrow.Field{
	{Name: "body_length", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "code", Type: arrow.PrimitiveTypes.Int32, Nullable: false},
	{Name: "content_type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "http_headers", Type: arrow.ListOf(HTTPHeaderStruct), Nullable: true},
	{Name: "latency", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "length", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "message", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "status", Type: arrow.BinaryTypes.String, Nullable: true},
}

var HTTPResponseStruct = arrow.StructOf(HTTPResponseFields...)

var HTTPResponseSchema = arrow.NewSchema(HTTPResponseFields, nil)
var HTTPResponseClassname = "http_response"
