// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Fingerprint struct {

	// Algorithm: The hash algorithm used to create the digital fingerprint, normalized to the caption of <code>algorithm_id</code>. In the case of <code>Other</code>, it is defined by the event source.
	Algorithm *string `json:"algorithm,omitempty" parquet:"algorithm,optional"`

	// Algorithm ID: The identifier of the normalized hash algorithm, which was used to create the digital fingerprint.
	AlgorithmId int32 `json:"algorithm_id" parquet:"algorithm_id"`

	// Value: The digital fingerprint value.
	Value string `json:"value" parquet:"value"`
}

func (v *Fingerprint) Observable() (*int, string) {
	typeId := 30
	return &typeId, "fingerprint"
}

var FingerprintFields = []arrow.Field{
	{Name: "algorithm", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "algorithm_id", Type: arrow.PrimitiveTypes.Int32, Nullable: false},
	{Name: "value", Type: arrow.BinaryTypes.String, Nullable: false},
}

var FingerprintStruct = arrow.StructOf(FingerprintFields...)

var FingerprintSchema = arrow.NewSchema(FingerprintFields, nil)
var FingerprintClassname = "fingerprint"
