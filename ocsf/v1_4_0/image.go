// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Image struct {

	// Labels: The list of labels associated to the image.
	Labels []string `json:"labels,omitempty" parquet:"labels,optional,list"`

	// Name: The image name. For example: <code>elixir</code>.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Path: The full path to the image file.
	Path *string `json:"path,omitempty" parquet:"path,optional"`

	// Tags: The list of tags; <code>{key:value}</code> pairs associated to the image.
	Tags []*KeyValueobject `json:"tags,omitempty" parquet:"tags,optional,list"`

	// Unique ID: The unique image ID. For example: <code>77af4d6b9913</code>.
	Uid string `json:"uid" parquet:"uid"`
}

var ImageFields = []arrow.Field{
	{Name: "labels", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "path", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "tags", Type: arrow.ListOf(KeyValueobjectStruct), Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: false},
}

var ImageStruct = arrow.StructOf(ImageFields...)

var ImageSchema = arrow.NewSchema(ImageFields, nil)
