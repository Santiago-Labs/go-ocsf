// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type UniformResourceLocator struct {

	// Website Categorization: The Website categorization names, as defined by <code>category_ids</code> enum values.
	Categories []string `json:"categories,omitempty" parquet:"categories,optional,list"`

	// Website Categorization IDs: The Website categorization identifiers.
	CategoryIds []int32 `json:"category_ids,omitempty" parquet:"category_ids,optional,list"`

	// Domain: The domain portion of the URL. For example: <code>example.com</code> in <code>https://sub.example.com</code>.
	Domain *string `json:"domain,omitempty" parquet:"domain,optional"`

	// Hostname: The URL host as extracted from the URL. For example: <code>www.example.com</code> from <code>www.example.com/download/trouble</code>.
	Hostname *string `json:"hostname,omitempty" parquet:"hostname,optional"`

	// Path: The URL path as extracted from the URL. For example: <code>/download/trouble</code> from <code>www.example.com/download/trouble</code>.
	Path *string `json:"path,omitempty" parquet:"path,optional"`

	// Port: The URL port. For example: <code>80</code>.
	Port *int32 `json:"port,omitempty" parquet:"port,optional"`

	// HTTP Query String: The query portion of the URL. For example: the query portion of the URL <code>http://www.example.com/search?q=bad&sort=date</code> is <code>q=bad&sort=date</code>.
	QueryString *string `json:"query_string,omitempty" parquet:"query_string,optional"`

	// Resource Type: The context in which a resource was retrieved in a web request.
	ResourceType *string `json:"resource_type,omitempty" parquet:"resource_type,optional"`

	// Scheme: The scheme portion of the URL. For example: <code>http</code>, <code>https</code>, <code>ftp</code>, or <code>sftp</code>.
	Scheme *string `json:"scheme,omitempty" parquet:"scheme,optional"`

	// Subdomain: The subdomain portion of the URL. For example: <code>sub</code> in <code>https://sub.example.com</code> or <code>sub2.sub1</code> in <code>https://sub2.sub1.example.com</code>.
	Subdomain *string `json:"subdomain,omitempty" parquet:"subdomain,optional"`

	// URL String: The URL string. See RFC 1738. For example: <code>http://www.example.com/download/trouble.exe</code>. Note: The URL path should not populate the URL string.
	UrlString *string `json:"url_string,omitempty" parquet:"url_string,optional"`
}

var UniformResourceLocatorFields = []arrow.Field{
	{Name: "categories", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "category_ids", Type: arrow.ListOf(arrow.PrimitiveTypes.Int32), Nullable: true},
	{Name: "domain", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "hostname", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "path", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "port", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "query_string", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "resource_type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "scheme", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "subdomain", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "url_string", Type: arrow.BinaryTypes.String, Nullable: true},
}

var UniformResourceLocatorStruct = arrow.StructOf(UniformResourceLocatorFields...)

var UniformResourceLocatorSchema = arrow.NewSchema(UniformResourceLocatorFields, nil)
