// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type HTTPCookie struct {

	// Domain: The domain name for the server from which the http_cookie is served.
	Domain *string `json:"domain,omitempty" parquet:"domain,optional"`

	// Expiration Time: The expiration time of the HTTP cookie.
	ExpirationTime int64 `json:"expiration_time,omitempty" parquet:"expiration_time,optional,timestamp_millis,timestamp(millisecond)"`

	// HTTP Only: This attribute prevents the cookie from being accessed via JavaScript.
	IsHttpOnly *bool `json:"is_http_only,omitempty" parquet:"is_http_only,optional"`

	// Secure: The cookie attribute indicates that cookies are sent to the server only when the request is encrypted using the HTTPS protocol.
	IsSecure *bool `json:"is_secure,omitempty" parquet:"is_secure,optional"`

	// Name: The HTTP cookie name.
	Name string `json:"name" parquet:"name"`

	// Path: The path of the HTTP cookie.
	Path *string `json:"path,omitempty" parquet:"path,optional"`

	// SameSite: The cookie attribute that lets servers specify whether/when cookies are sent with cross-site requests. Values are: Strict, Lax or None
	Samesite *string `json:"samesite,omitempty" parquet:"samesite,optional"`

	// Value: The HTTP cookie value.
	Value string `json:"value" parquet:"value"`
}

var HTTPCookieFields = []arrow.Field{
	{Name: "domain", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "expiration_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "is_http_only", Type: arrow.FixedWidthTypes.Boolean, Nullable: true},
	{Name: "is_secure", Type: arrow.FixedWidthTypes.Boolean, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: false},
	{Name: "path", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "samesite", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "value", Type: arrow.BinaryTypes.String, Nullable: false},
}

var HTTPCookieStruct = arrow.StructOf(HTTPCookieFields...)

var HTTPCookieSchema = arrow.NewSchema(HTTPCookieFields, nil)
var HTTPCookieClassname = "http_cookie"
