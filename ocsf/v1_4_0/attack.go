// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type MITREATTCK struct {

	// Sub Technique: The Sub Technique object describes the sub technique ID and/or name associated to an attack, as defined by <a target='_blank' href='https://attack.mitre.org/wiki/ATT&CK_Matrix'>ATT&CK速 Matrix</a>.
	SubTechnique *MITREATTCKSubTechnique `json:"sub_technique,omitempty" parquet:"sub_technique,optional"`

	// Tactic: The Tactic object describes the tactic ID and/or name that is associated to an attack, as defined by <a target='_blank' href='https://attack.mitre.org/wiki/ATT&CK_Matrix'>ATT&CK速 Matrix</a>.
	Tactic *MITREATTCKTactic `json:"tactic,omitempty" parquet:"tactic,optional"`

	// Technique: The Technique object describes the technique ID and/or name associated to an attack, as defined by <a target='_blank' href='https://attack.mitre.org/wiki/ATT&CK_Matrix'>ATT&CK速 Matrix</a>.
	Technique *MITREATTCKTechnique `json:"technique,omitempty" parquet:"technique,optional"`

	// Version: The <a target='_blank' href='https://attack.mitre.org/wiki/ATT&CK_Matrix'>ATT&CK速 Matrix</a> version.
	Version *string `json:"version,omitempty" parquet:"version,optional"`
}

func (v *MITREATTCK) Observable() (*int, string) {
	return nil, ""
}

var MITREATTCKFields = []arrow.Field{
	{Name: "sub_technique", Type: MITREATTCKSubTechniqueStruct, Nullable: true},
	{Name: "tactic", Type: MITREATTCKTacticStruct, Nullable: true},
	{Name: "technique", Type: MITREATTCKTechniqueStruct, Nullable: true},
	{Name: "version", Type: arrow.BinaryTypes.String, Nullable: true},
}

var MITREATTCKStruct = arrow.StructOf(MITREATTCKFields...)

var MITREATTCKSchema = arrow.NewSchema(MITREATTCKFields, nil)
var MITREATTCKClassname = "attack"
