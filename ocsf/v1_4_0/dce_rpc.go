// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type DCERPC struct {

	// Command: The request command (e.g. REQUEST, BIND).
	Command *string `json:"command,omitempty" parquet:"command,optional"`

	// Command Response: The reply to the request command (e.g. RESPONSE, BINDACK or FAULT).
	CommandResponse *string `json:"command_response,omitempty" parquet:"command_response,optional"`

	// Flags: The list of interface flags.
	Flags []string `json:"flags" parquet:"flags,list"`

	// Opnum: An operation number used to identify a specific remote procedure call (RPC) method or a method in an interface.
	Opnum *int32 `json:"opnum,omitempty" parquet:"opnum,optional"`

	// Remote Procedure Call Interface: The RPC Interface object describes the details pertaining to the remote procedure call interface.
	RpcInterface RPCInterface `json:"rpc_interface" parquet:"rpc_interface"`
}

var DCERPCFields = []arrow.Field{
	{Name: "command", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "command_response", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "flags", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: false},
	{Name: "opnum", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "rpc_interface", Type: RPCInterfaceStruct, Nullable: false},
}

var DCERPCStruct = arrow.StructOf(DCERPCFields...)

var DCERPCSchema = arrow.NewSchema(DCERPCFields, nil)
var DCERPCClassname = "dce_rpc"
