// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type SCIM struct {

	// Auth Protocol: The authorization protocol as defined by the caption of <code>auth_protocol_id</code>. In the case of <code>Other</code>, it is defined by the event source.
	AuthProtocol *string `json:"auth_protocol,omitempty" parquet:"auth_protocol,optional"`

	// Auth Protocol ID: The normalized identifier of the authorization protocol used by the SCIM resource.
	AuthProtocolId *int32 `json:"auth_protocol_id,omitempty" parquet:"auth_protocol_id,optional"`

	// Created Time: When the SCIM resource was added to the service provider.
	CreatedTime int64 `json:"created_time,omitempty" parquet:"created_time,optional,timestamp_millis,timestamp(millisecond)"`

	// Last Error Message: Message or code associated with the last encountered error.
	ErrorMessage *string `json:"error_message,omitempty" parquet:"error_message,optional"`

	// SCIM Group Provisioning Enabled: Indicates whether the SCIM resource is configured to provision groups, automatically or otherwise.
	IsGroupProvisioningEnabled *bool `json:"is_group_provisioning_enabled,omitempty" parquet:"is_group_provisioning_enabled,optional"`

	// SCIM User Provisioning Enabled: Indicates whether the SCIM resource is configured to provision users, automatically or otherwise.
	IsUserProvisioningEnabled *bool `json:"is_user_provisioning_enabled,omitempty" parquet:"is_user_provisioning_enabled,optional"`

	// Last Sync Time: Timestamp of the most recent successful synchronization.
	LastRunTime int64 `json:"last_run_time,omitempty" parquet:"last_run_time,optional,timestamp_millis,timestamp(millisecond)"`

	// Modified Time: The most recent time when the SCIM resource was updated at the service provider.
	ModifiedTime int64 `json:"modified_time,omitempty" parquet:"modified_time,optional,timestamp_millis,timestamp(millisecond)"`

	// Name: The name of the SCIM resource.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Supported Protocol: The supported protocol for the SCIM resource. E.g., <code>SAML</code>, <code>OIDC</code>, or <code>OAuth2</code>.
	ProtocolName *string `json:"protocol_name,omitempty" parquet:"protocol_name,optional"`

	// Rate Limit: Maximum number of requests allowed by the SCIM resource within a specified time frame to avoid throttling.
	RateLimit *int32 `json:"rate_limit,omitempty" parquet:"rate_limit,optional"`

	// SCIM Group Schema: SCIM provides a schema for representing groups, identified using the following schema URI: <code>urn:ietf:params:scim:schemas:core:2.0:Group</code> as defined in <a target='_blank' href='https://datatracker.ietf.org/doc/html/rfc7643'>RFC-7634</a>. This attribute will capture key-value pairs for the scheme implemented in a SCIM resource.
	ScimGroupSchema *string `json:"scim_group_schema,omitempty" parquet:"scim_group_schema,optional"`

	// SCIM User Schema: SCIM provides a resource type for user resources. The core schema for user is identified using the following schema URI: <code>urn:ietf:params:scim:schemas:core:2.0:User</code> as defined in <a target='_blank' href='https://datatracker.ietf.org/doc/html/rfc7643'>RFC-7634</a>. his attribute will capture key-value pairs for the scheme implemented in a SCIM resource. This object is inclusive of both the basic and Enterprise User Schema Extension.
	ScimUserSchema *string `json:"scim_user_schema,omitempty" parquet:"scim_user_schema,optional"`

	// State: The provisioning state of the SCIM resource, normalized to the caption of the <code>state_id</code> value. In the case of <code>Other</code>, it is defined by the event source.
	State *string `json:"state,omitempty" parquet:"state,optional"`

	// State ID: The normalized state ID of the SCIM resource to reflect its activation status.
	StateId *int32 `json:"state_id,omitempty" parquet:"state_id,optional"`

	// Unique ID: A unique identifier for a SCIM resource as defined by the service provider.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// External ID: A String that is an identifier for the resource as defined by the provisioning client. The <code>externalId</code> may simplify identification of a resource between the provisioning client and the service provider by allowing the client to use a filter to locate the resource with an identifier from the provisioning domain, obviating the need to store a local mapping between the provisioning domain's identifier of the resource and the identifier used by the service provider.
	UidAlt *string `json:"uid_alt,omitempty" parquet:"uid_alt,optional"`

	// SCIM Endpoint URL: The primary URL for SCIM API requests.
	UrlString *string `json:"url_string,omitempty" parquet:"url_string,optional"`

	// Service Provider: Name of the vendor or service provider implementing SCIM. E.g., <code>Okta</code>, <code>Auth0</code>, <code>Microsoft</code>.
	VendorName *string `json:"vendor_name,omitempty" parquet:"vendor_name,optional"`

	// SCIM Version: SCIM protocol version supported e.g., <code>SCIM 2.0</code>.
	Version *string `json:"version,omitempty" parquet:"version,optional"`
}

var SCIMFields = []arrow.Field{
	{Name: "auth_protocol", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "auth_protocol_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "created_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "error_message", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "is_group_provisioning_enabled", Type: arrow.FixedWidthTypes.Boolean, Nullable: true},
	{Name: "is_user_provisioning_enabled", Type: arrow.FixedWidthTypes.Boolean, Nullable: true},
	{Name: "last_run_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "modified_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "protocol_name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "rate_limit", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "scim_group_schema", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "scim_user_schema", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "state", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "state_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid_alt", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "url_string", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "vendor_name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "version", Type: arrow.BinaryTypes.String, Nullable: true},
}

var SCIMStruct = arrow.StructOf(SCIMFields...)

var SCIMSchema = arrow.NewSchema(SCIMFields, nil)
