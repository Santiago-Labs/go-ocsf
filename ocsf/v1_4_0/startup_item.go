// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type StartupItem struct {

	// Kernel Driver: The startup item kernel driver resource.
	Driver *KernelExtension `json:"driver,omitempty" parquet:"driver,optional"`

	// Job: The startup item job resource.
	Job *Job `json:"job,omitempty" parquet:"job,optional"`

	// Name: The unique name of the startup item.
	Name string `json:"name" parquet:"name"`

	// Process: The startup item process resource.
	Process *Process `json:"process,omitempty" parquet:"process,optional"`

	// Run Mode IDs: The list of normalized identifiers that describe the startup items' properties when it is running.  Use this field to capture extended information about the process, which may depend on the type of startup item.  E.g., A Windows service that interacts with the desktop.
	RunModeIds []int32 `json:"run_mode_ids,omitempty" parquet:"run_mode_ids,list,optional"`

	// Run Modes: The list of run_modes, normalized to the captions of the run_mode_id values.  In the case of 'Other', they are defined by the event source.
	RunModes []string `json:"run_modes,omitempty" parquet:"run_modes,list,optional"`

	// Run State: The run state of the startup item.
	RunState *string `json:"run_state,omitempty" parquet:"run_state,optional"`

	// Run State ID: The run state ID of the startup item.
	RunStateId *int32 `json:"run_state_id,omitempty" parquet:"run_state_id,optional"`

	// Start Type: The start type of the startup item.
	StartType *string `json:"start_type,omitempty" parquet:"start_type,optional"`

	// Start Type ID: The start type ID of the startup item.
	StartTypeId int32 `json:"start_type_id" parquet:"start_type_id"`

	// Type: The startup item type.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Type ID: The startup item type identifier.
	TypeId *int32 `json:"type_id,omitempty" parquet:"type_id,optional"`

	// Windows Service: The startup item Windows service resource.
	WinService *WindowsService `json:"win_service,omitempty" parquet:"win_service,optional"`
}

var StartupItemFields = []arrow.Field{
	{Name: "driver", Type: KernelExtensionStruct, Nullable: true},
	{Name: "job", Type: JobStruct, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: false},
	{Name: "process", Type: ProcessStruct, Nullable: true},
	{Name: "run_mode_ids", Type: arrow.ListOf(arrow.PrimitiveTypes.Int32), Nullable: true},
	{Name: "run_modes", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "run_state", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "run_state_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "start_type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "start_type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: false},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "win_service", Type: WindowsServiceStruct, Nullable: true},
}

var StartupItemStruct = arrow.StructOf(StartupItemFields...)

var StartupItemSchema = arrow.NewSchema(StartupItemFields, nil)
var StartupItemClassname = "startup_item"
