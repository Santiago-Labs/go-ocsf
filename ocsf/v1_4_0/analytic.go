// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Analytic struct {

	// Category: The analytic category.
	Category *string `json:"category,omitempty" parquet:"category,optional"`

	// Description: The description of the analytic that generated the finding.
	Desc *string `json:"desc,omitempty" parquet:"desc,optional"`

	// Name: The name of the analytic that generated the finding.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Type: The analytic type.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Type ID: The analytic type ID.
	TypeId int32 `json:"type_id" parquet:"type_id"`

	// Unique ID: The unique identifier of the analytic that generated the finding.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// Version: The analytic version. For example: <code>1.1</code>.
	Version *string `json:"version,omitempty" parquet:"version,optional"`
}

var AnalyticFields = []arrow.Field{
	{Name: "category", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "desc", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: false},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "version", Type: arrow.BinaryTypes.String, Nullable: true},
}

var AnalyticStruct = arrow.StructOf(AnalyticFields...)

var AnalyticSchema = arrow.NewSchema(AnalyticFields, nil)
