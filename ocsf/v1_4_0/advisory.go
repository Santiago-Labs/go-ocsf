// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Advisory struct {

	// Average Timespan: The average time to patch.
	AvgTimespan *TimeSpan `json:"avg_timespan,omitempty" parquet:"avg_timespan,optional"`

	// Patch Bulletin: The Advisory bulletin identifier.
	Bulletin *string `json:"bulletin,omitempty" parquet:"bulletin,optional"`

	// Classification: The vendors classification of the Advisory.
	Classification *string `json:"classification,omitempty" parquet:"classification,optional"`

	// Created Time: The time when the Advisory record was created.
	CreatedTime int64 `json:"created_time,omitempty" parquet:"created_time,timestamp_millis,timestamp(millisecond),optional"`

	// Description: A brief description of the Advisory Record.
	Desc *string `json:"desc,omitempty" parquet:"desc,optional"`

	// Install State: The install state of the Advisory.
	InstallState *string `json:"install_state,omitempty" parquet:"install_state,optional"`

	// Install State ID: The normalized install state ID of the Advisory.
	InstallStateId *int32 `json:"install_state_id,omitempty" parquet:"install_state_id,optional"`

	// The patch is superseded.: The Advisory has been replaced by another.
	IsSuperseded *bool `json:"is_superseded,omitempty" parquet:"is_superseded,optional"`

	// Modified Time: The time when the Advisory record was last updated.
	ModifiedTime int64 `json:"modified_time,omitempty" parquet:"modified_time,timestamp_millis,timestamp(millisecond),optional"`

	// OS: The operating system the Advisory applies to.
	Os *OperatingSystemOS `json:"os,omitempty" parquet:"os,optional"`

	// Product: The product where the vulnerability was discovered.
	Product *Product `json:"product,omitempty" parquet:"product,optional"`

	// References: A list of reference URLs with additional information about the vulnerabilities disclosed in the Advisory.
	References []string `json:"references,omitempty" parquet:"references,list,optional"`

	// Related CVEs: A list of Common Vulnerabilities and Exposures <a target='_blank' href='https://cve.mitre.org/'>(CVE)</a> identifiers related to the vulnerabilities disclosed in the Advisory.
	RelatedCves []CVE `json:"related_cves,omitempty" parquet:"related_cves,list,optional"`

	// Related CWEs: A list of Common Weakness Enumeration <a target='_blank' href='https://cwe.mitre.org/'>(CWE)</a> identifiers related to the vulnerabilities disclosed in the Advisory.
	RelatedCwes []CWE `json:"related_cwes,omitempty" parquet:"related_cwes,list,optional"`

	// Size: The size in bytes for the Advisory. Usually populated for a KB Article patch.
	Size *int64 `json:"size,omitempty" parquet:"size,optional"`

	// Source URL: The Advisory link from the source vendor.
	SrcUrl *string `json:"src_url,omitempty" parquet:"src_url,optional"`

	// Title: A title or a brief phrase summarizing the Advisory.
	Title *string `json:"title,omitempty" parquet:"title,optional"`

	// Advisory ID: The unique number assigned to the disclosed vulnerability.
	Uid string `json:"uid" parquet:"uid"`
}

func (v *Advisory) Observable() (*int, string) {
	return nil, ""
}

var AdvisoryFields = []arrow.Field{
	{Name: "avg_timespan", Type: TimeSpanStruct, Nullable: true},
	{Name: "bulletin", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "classification", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "created_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "desc", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "install_state", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "install_state_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "is_superseded", Type: arrow.FixedWidthTypes.Boolean, Nullable: true},
	{Name: "modified_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "os", Type: OperatingSystemOSStruct, Nullable: true},
	{Name: "product", Type: ProductStruct, Nullable: true},
	{Name: "references", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "related_cves", Type: arrow.ListOf(CVEStruct), Nullable: true},
	{Name: "related_cwes", Type: arrow.ListOf(CWEStruct), Nullable: true},
	{Name: "size", Type: arrow.PrimitiveTypes.Int64, Nullable: true},
	{Name: "src_url", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "title", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: false},
}

var AdvisoryStruct = arrow.StructOf(AdvisoryFields...)

var AdvisorySchema = arrow.NewSchema(AdvisoryFields, nil)
var AdvisoryClassname = "advisory"
