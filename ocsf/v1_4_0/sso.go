// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type SSO struct {

	// Auth Protocol: The authorization protocol as defined by the caption of <code>auth_protocol_id</code>. In the case of <code>Other</code>, it is defined by the event source.
	AuthProtocol *string `json:"auth_protocol,omitempty" parquet:"auth_protocol,optional"`

	// Auth Protocol ID: The normalized identifier of the authentication protocol used by the SSO resource.
	AuthProtocolId *int32 `json:"auth_protocol_id,omitempty" parquet:"auth_protocol_id,optional"`

	// SAML Certificate: Digital Signature associated with the SSO resource, e.g., SAML X.509 certificate details.
	Certificate *DigitalCertificate `json:"certificate,omitempty" parquet:"certificate,optional"`

	// Created Time: When the SSO resource was created.
	CreatedTime int64 `json:"created_time,omitempty" parquet:"created_time,optional,timestamp_millis,timestamp(millisecond)"`

	// SSO Session Duration: The duration (in minutes) for an SSO session, after which re-authentication is required.
	DurationMins *int32 `json:"duration_mins,omitempty" parquet:"duration_mins,optional"`

	// SSO Idle Timeout: Duration (in minutes) of allowed inactivity before Single Sign-On (SSO) session expiration.
	IdleTimeout *int32 `json:"idle_timeout,omitempty" parquet:"idle_timeout,optional"`

	// SSO Login Endpoint: URL for initiating an SSO login request.
	LoginEndpoint *string `json:"login_endpoint,omitempty" parquet:"login_endpoint,optional"`

	// SSO Logout Endpoint: URL for initiating an SSO logout request, allowing sessions to be terminated across applications.
	LogoutEndpoint *string `json:"logout_endpoint,omitempty" parquet:"logout_endpoint,optional"`

	// SSO Metadata Endpoint: URL where metadata about the SSO configuration is available (e.g., for SAML configurations).
	MetadataEndpoint *string `json:"metadata_endpoint,omitempty" parquet:"metadata_endpoint,optional"`

	// Modified Time: The most recent time when the SSO resource was updated.
	ModifiedTime int64 `json:"modified_time,omitempty" parquet:"modified_time,optional,timestamp_millis,timestamp(millisecond)"`

	// Name: The name of the SSO resource.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Supported Protocol: The supported protocol for the SSO resource. E.g., <code>SAML</code> or <code>OIDC</code>.
	ProtocolName *string `json:"protocol_name,omitempty" parquet:"protocol_name,optional"`

	// Scopes: Scopes define the specific permissions or actions that the client is allowed to perform on behalf of the user. Each scope represents a different set of permissions, and the user can selectively grant or deny access to specific scopes during the authorization process.
	Scopes []string `json:"scopes,omitempty" parquet:"scopes,optional,list"`

	// Unique ID: A unique identifier for a SSO resource.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// Service Provider: Name of the vendor or service provider implementing SSO. E.g., <code>Okta</code>, <code>Auth0</code>, <code>Microsoft</code>.
	VendorName *string `json:"vendor_name,omitempty" parquet:"vendor_name,optional"`
}

var SSOFields = []arrow.Field{
	{Name: "auth_protocol", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "auth_protocol_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "certificate", Type: DigitalCertificateStruct, Nullable: true},
	{Name: "created_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "duration_mins", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "idle_timeout", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "login_endpoint", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "logout_endpoint", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "metadata_endpoint", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "modified_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "protocol_name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "scopes", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "vendor_name", Type: arrow.BinaryTypes.String, Nullable: true},
}

var SSOStruct = arrow.StructOf(SSOFields...)

var SSOSchema = arrow.NewSchema(SSOFields, nil)
