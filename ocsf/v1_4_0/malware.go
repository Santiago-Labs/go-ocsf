// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Malware struct {

	// Classification IDs: The list of normalized identifiers of the malware classifications. Reference: <a target='_blank' href='https://docs.oasis-open.org/cti/stix/v2.1/os/stix-v2.1-os.html#_oxlc4df65spl'>STIX Malware Types</a>
	ClassificationIds []int32 `json:"classification_ids" parquet:"classification_ids,list"`

	// Classifications: The list of malware classifications, normalized to the captions of the <code>classification_ids</code> values. In the case of 'Other', they are defined by the event source.
	Classifications []string `json:"classifications,omitempty" parquet:"classifications,optional,list"`

	// CVE List: List of Common Vulnerabilities and Exposures (<a target='_blank' href='https://cve.mitre.org/'>CVE</a>).
	Cves []*CVE `json:"cves,omitempty" parquet:"cves,optional,list"`

	// Name: The malware name, as reported by the detection engine.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Path: The filesystem path of the malware that was observed.
	Path *string `json:"path,omitempty" parquet:"path,optional"`

	// Provider: The provider of the malware information.
	Provider *string `json:"provider,omitempty" parquet:"provider,optional"`

	// Unique ID: The malware unique identifier, as reported by the detection engine. For example a virus id or an IPS signature id.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`
}

var MalwareFields = []arrow.Field{
	{Name: "classification_ids", Type: arrow.ListOf(arrow.PrimitiveTypes.Int32), Nullable: false},
	{Name: "classifications", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "cves", Type: arrow.ListOf(CVEStruct), Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "path", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "provider", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
}

var MalwareStruct = arrow.StructOf(MalwareFields...)

var MalwareSchema = arrow.NewSchema(MalwareFields, nil)
