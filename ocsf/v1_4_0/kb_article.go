// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type KBArticle struct {

	// Average Timespan: The average time to patch.
	AvgTimespan *TimeSpan `json:"avg_timespan,omitempty" parquet:"avg_timespan,optional"`

	// Patch Bulletin: The kb article bulletin identifier.
	Bulletin *string `json:"bulletin,omitempty" parquet:"bulletin,optional"`

	// Classification: The vendors classification of the kb article.
	Classification *string `json:"classification,omitempty" parquet:"classification,optional"`

	// Created Time: The date the kb article was released by the vendor.
	CreatedTime int64 `json:"created_time,omitempty" parquet:"created_time,timestamp_millis,timestamp(millisecond),optional"`

	// Install State: The install state of the kb article.
	InstallState *string `json:"install_state,omitempty" parquet:"install_state,optional"`

	// Install State ID: The normalized install state ID of the kb article.
	InstallStateId *int32 `json:"install_state_id,omitempty" parquet:"install_state_id,optional"`

	// The patch is superseded.: The kb article has been replaced by another.
	IsSuperseded *bool `json:"is_superseded,omitempty" parquet:"is_superseded,optional"`

	// OS: The operating system the kb article applies.
	Os *OperatingSystemOS `json:"os,omitempty" parquet:"os,optional"`

	// Product: The product details the kb article applies.
	Product *Product `json:"product,omitempty" parquet:"product,optional"`

	// Severity: The severity of the kb article.
	Severity *string `json:"severity,omitempty" parquet:"severity,optional"`

	// Size: The size in bytes for the kb article.
	Size *int64 `json:"size,omitempty" parquet:"size,optional"`

	// Source URL: The kb article link from the source vendor.
	SrcUrl *string `json:"src_url,omitempty" parquet:"src_url,optional"`

	// Title: The title of the kb article.
	Title *string `json:"title,omitempty" parquet:"title,optional"`

	// Unique ID: The unique identifier for the kb article.
	Uid string `json:"uid" parquet:"uid"`
}

var KBArticleFields = []arrow.Field{
	{Name: "avg_timespan", Type: TimeSpanStruct, Nullable: true},
	{Name: "bulletin", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "classification", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "created_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "install_state", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "install_state_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "is_superseded", Type: arrow.FixedWidthTypes.Boolean, Nullable: true},
	{Name: "os", Type: OperatingSystemOSStruct, Nullable: true},
	{Name: "product", Type: ProductStruct, Nullable: true},
	{Name: "severity", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "size", Type: arrow.PrimitiveTypes.Int64, Nullable: true},
	{Name: "src_url", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "title", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: false},
}

var KBArticleStruct = arrow.StructOf(KBArticleFields...)

var KBArticleSchema = arrow.NewSchema(KBArticleFields, nil)
var KBArticleClassname = "kb_article"
