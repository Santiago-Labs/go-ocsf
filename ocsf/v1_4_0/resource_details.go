// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type ResourceDetails struct {

	// Agent List: A list of <code>agent</code> objects associated with a device, endpoint, or resource.
	AgentList []Agent `json:"agent_list,omitempty" parquet:"agent_list,list,optional"`

	// Cloud Partition: The canonical cloud partition name to which the region is assigned (e.g. AWS Partitions: aws, aws-cn, aws-us-gov).
	CloudPartition *string `json:"cloud_partition,omitempty" parquet:"cloud_partition,optional"`

	// Criticality: The criticality of the resource as defined by the event source.
	Criticality *string `json:"criticality,omitempty" parquet:"criticality,optional"`

	// Data: Additional data describing the resource.
	Data *string `json:"data,omitempty" parquet:"data,optional"`

	// Data Classification: A list of Data Classification objects, that include information about data classification levels and data category types, indentified by a classifier.
	DataClassifications []DataClassification `json:"data_classifications,omitempty" parquet:"data_classifications,list,optional"`

	// Group: The name of the related resource group.
	Group *Group `json:"group,omitempty" parquet:"group,optional"`

	// Hostname: The fully qualified name of the resource.
	Hostname *string `json:"hostname,omitempty" parquet:"hostname,optional"`

	// IP Address: The IP address of the resource, in either IPv4 or IPv6 format.
	Ip *string `json:"ip,omitempty" parquet:"ip,optional"`

	// Labels: The list of labels associated to the resource.
	Labels []string `json:"labels,omitempty" parquet:"labels,list,optional"`

	// Name: The name of the resource.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Namespace: The namespace is useful when similar entities exist that you need to keep separate.
	Namespace *string `json:"namespace,omitempty" parquet:"namespace,optional"`

	// Owner: The identity of the service or user account that owns the resource.
	Owner *User `json:"owner,omitempty" parquet:"owner,optional"`

	// Region: The cloud region of the resource.
	Region *string `json:"region,omitempty" parquet:"region,optional"`

	// Tags: The list of tags; <code>{key:value}</code> pairs associated to the resource.
	Tags []KeyValueobject `json:"tags,omitempty" parquet:"tags,list,optional"`

	// Type: The resource type as defined by the event source.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Unique ID: The unique identifier of the resource.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// Version: The version of the resource. For example <code>1.2.3</code>.
	Version *string `json:"version,omitempty" parquet:"version,optional"`
}

var ResourceDetailsFields = []arrow.Field{
	{Name: "agent_list", Type: arrow.ListOf(AgentStruct), Nullable: true},
	{Name: "cloud_partition", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "criticality", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "data", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "data_classifications", Type: arrow.ListOf(DataClassificationStruct), Nullable: true},
	{Name: "group", Type: GroupStruct, Nullable: true},
	{Name: "hostname", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "ip", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "labels", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "namespace", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "owner", Type: UserStruct, Nullable: true},
	{Name: "region", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "tags", Type: arrow.ListOf(KeyValueobjectStruct), Nullable: true},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "version", Type: arrow.BinaryTypes.String, Nullable: true},
}

var ResourceDetailsStruct = arrow.StructOf(ResourceDetailsFields...)

var ResourceDetailsSchema = arrow.NewSchema(ResourceDetailsFields, nil)
var ResourceDetailsClassname = "resource_details"
