// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type OperatingSystemOS struct {

	// OS Build: The operating system build number.
	Build *string `json:"build,omitempty" parquet:"build,optional"`

	// Country: The operating system country code, as defined by the ISO 3166-1 standard (Alpha-2 code).<p><b>Note:</b> The two letter country code should be capitalized. For example: <code>US</code> or <code>CA</code>.</p>
	Country *string `json:"country,omitempty" parquet:"country,optional"`

	// The product CPE identifier: The Common Platform Enumeration (CPE) name as described by (<a target='_blank' href='https://nvd.nist.gov/products/cpe'>NIST</a>) For example: <code>cpe:/a:apple:safari:16.2</code>.
	CpeName *string `json:"cpe_name,omitempty" parquet:"cpe_name,optional"`

	// CPU Bits: The cpu architecture, the number of bits used for addressing in memory. For example: <code>32</code> or <code>64</code>.
	CpuBits *int32 `json:"cpu_bits,omitempty" parquet:"cpu_bits,optional"`

	// OS Edition: The operating system edition. For example: <code>Professional</code>.
	Edition *string `json:"edition,omitempty" parquet:"edition,optional"`

	// Kernel Release: The kernel release of the operating system. On Unix-based systems, this is determined from the <code>uname -r</code> command output, for example "5.15.0-122-generic".
	KernelRelease *string `json:"kernel_release,omitempty" parquet:"kernel_release,optional"`

	// Language: The two letter lower case language codes, as defined by <a target='_blank' href='https://en.wikipedia.org/wiki/ISO_639-1'>ISO 639-1</a>. For example: <code>en</code> (English), <code>de</code> (German), or <code>fr</code> (French).
	Lang *string `json:"lang,omitempty" parquet:"lang,optional"`

	// Name: The operating system name.
	Name string `json:"name" parquet:"name"`

	// OS Service Pack: The name of the latest Service Pack.
	SpName *string `json:"sp_name,omitempty" parquet:"sp_name,optional"`

	// OS Service Pack Version: The version number of the latest Service Pack.
	SpVer *int32 `json:"sp_ver,omitempty" parquet:"sp_ver,optional"`

	// Type: The type of the operating system.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Type ID: The type identifier of the operating system.
	TypeId int32 `json:"type_id" parquet:"type_id"`

	// Version: The version of the OS running on the device that originated the event. For example: "Windows 10", "OS X 10.7", or "iOS 9".
	Version *string `json:"version,omitempty" parquet:"version,optional"`
}

var OperatingSystemOSFields = []arrow.Field{
	{Name: "build", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "country", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "cpe_name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "cpu_bits", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "edition", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "kernel_release", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "lang", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: false},
	{Name: "sp_name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "sp_ver", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: false},
	{Name: "version", Type: arrow.BinaryTypes.String, Nullable: true},
}

var OperatingSystemOSStruct = arrow.StructOf(OperatingSystemOSFields...)

var OperatingSystemOSSchema = arrow.NewSchema(OperatingSystemOSFields, nil)
var OperatingSystemOSClassname = "os"
