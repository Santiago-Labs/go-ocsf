// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type WindowsService struct {

	// Command Line: The full command line used to launch the service.
	CmdLine *string `json:"cmd_line,omitempty" parquet:"cmd_line,optional"`

	// Labels: The list of labels associated with the service.
	Labels []string `json:"labels,omitempty" parquet:"labels,list,optional"`

	// Load Order Group: The name of the load ordering group of which this service is a member.
	LoadOrderGroup *string `json:"load_order_group,omitempty" parquet:"load_order_group,optional"`

	// Name: The unique name of the service.
	Name string `json:"name" parquet:"name"`

	// Service Category: The service category, normalized to the caption of the service_category_id value. In the case of 'Other', it is defined by the event source.
	ServiceCategory *string `json:"service_category,omitempty" parquet:"service_category,optional"`

	// Service Category ID: The normalized identifier of the service category.
	ServiceCategoryId *int32 `json:"service_category_id,omitempty" parquet:"service_category_id,optional"`

	// Service Dependencies: The names of other services upon which this service has a dependency.
	ServiceDependencies []string `json:"service_dependencies,omitempty" parquet:"service_dependencies,list,optional"`

	// Service Error Control: The service error control, normalized to the caption of the <code>service_error_control_id</code> value. In the case of 'Other', it is defined by the event source.
	ServiceErrorControl *string `json:"service_error_control,omitempty" parquet:"service_error_control,optional"`

	// Service Error Control ID: The normalized identifier of the service error control.
	ServiceErrorControlId *int32 `json:"service_error_control_id,omitempty" parquet:"service_error_control_id,optional"`

	// Service Start Name: For a user mode service, this attribute represents the name of the account under which the service is run. For a kernel mode driver, this attribute represents the object name used to load the driver.
	ServiceStartName *string `json:"service_start_name,omitempty" parquet:"service_start_name,optional"`

	// Service Start Type: The service start type, normalized to the caption of the <code>service_start_type_id</code> value. In the case of 'Other', it is defined by the event source.
	ServiceStartType *string `json:"service_start_type,omitempty" parquet:"service_start_type,optional"`

	// Service Start Type ID: The normalized identifier of the service start type.
	ServiceStartTypeId *int32 `json:"service_start_type_id,omitempty" parquet:"service_start_type_id,optional"`

	// Service Type: The service type, normalized to the caption of the service_type_id value. In the case of 'Other', it is defined by the event source.
	ServiceType *string `json:"service_type,omitempty" parquet:"service_type,optional"`

	// Service Type ID: The normalized identifier of the service type.
	ServiceTypeId *int32 `json:"service_type_id,omitempty" parquet:"service_type_id,optional"`

	// Tags: The list of tags; <code>{key:value}</code> pairs associated to the service.
	Tags []KeyValueobject `json:"tags,omitempty" parquet:"tags,list,optional"`

	// Unique ID: The unique identifier of the service.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// Version: The version of the service.
	Version *string `json:"version,omitempty" parquet:"version,optional"`
}

func (v *WindowsService) Observable() (*int, string) {
	return nil, ""
}

var WindowsServiceFields = []arrow.Field{
	{Name: "cmd_line", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "labels", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "load_order_group", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: false},
	{Name: "service_category", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "service_category_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "service_dependencies", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "service_error_control", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "service_error_control_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "service_start_name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "service_start_type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "service_start_type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "service_type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "service_type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "tags", Type: arrow.ListOf(KeyValueobjectStruct), Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "version", Type: arrow.BinaryTypes.String, Nullable: true},
}

var WindowsServiceStruct = arrow.StructOf(WindowsServiceFields...)

var WindowsServiceSchema = arrow.NewSchema(WindowsServiceFields, nil)
var WindowsServiceClassname = "win_service"
