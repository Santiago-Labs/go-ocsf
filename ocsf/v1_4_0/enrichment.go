// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Enrichment struct {

	// Created Time: The time when the enrichment data was generated.
	CreatedTime *int64 `json:"created_time,omitempty" parquet:"created_time,optional"`

	// Data: The enrichment data associated with the attribute and value. The meaning of this data depends on the type the enrichment record.
	Data string `json:"data" parquet:"data"`

	// Description: A long description of the enrichment data.
	Desc *string `json:"desc,omitempty" parquet:"desc,optional"`

	// Name: The name of the attribute to which the enriched data pertains.
	Name string `json:"name" parquet:"name"`

	// Provider: The enrichment data provider name.
	Provider *string `json:"provider,omitempty" parquet:"provider,optional"`

	// Reputation Scores: The reputation of the enrichment data.
	Reputation *Reputation `json:"reputation,omitempty" parquet:"reputation,optional"`

	// Short Description: A short description of the enrichment data.
	ShortDesc *string `json:"short_desc,omitempty" parquet:"short_desc,optional"`

	// Source URL: The URL of the source of the enrichment data.
	SrcUrl *string `json:"src_url,omitempty" parquet:"src_url,optional"`

	// Type: The enrichment type. For example: <code>location</code>.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Value: The value of the attribute to which the enriched data pertains.
	Value string `json:"value" parquet:"value"`
}

var EnrichmentFields = []arrow.Field{
	{Name: "created_time", Type: arrow.PrimitiveTypes.Int64, Nullable: true},
	{Name: "data", Type: arrow.BinaryTypes.String, Nullable: false},
	{Name: "desc", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: false},
	{Name: "provider", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "reputation", Type: ReputationStruct, Nullable: true},
	{Name: "short_desc", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "src_url", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "value", Type: arrow.BinaryTypes.String, Nullable: false},
}

var EnrichmentStruct = arrow.StructOf(EnrichmentFields...)

var EnrichmentSchema = arrow.NewSchema(EnrichmentFields, nil)
