// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type DeviceHardwareInfo struct {

	// BIOS Date: The BIOS date. For example: <code>03/31/16</code>.
	BiosDate *string `json:"bios_date,omitempty" parquet:"bios_date,optional"`

	// BIOS Manufacturer: The BIOS manufacturer. For example: <code>LENOVO</code>.
	BiosManufacturer *string `json:"bios_manufacturer,omitempty" parquet:"bios_manufacturer,optional"`

	// BIOS Version: The BIOS version. For example: <code>LENOVO G5ETA2WW (2.62)</code>.
	BiosVer *string `json:"bios_ver,omitempty" parquet:"bios_ver,optional"`

	// Chassis: The chassis type describes the system enclosure or physical form factor. Such as the following examples for Windows <a target='_blank' href='https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-systemenclosure'>Windows Chassis Types</a>
	Chassis *string `json:"chassis,omitempty" parquet:"chassis,optional"`

	// CPU Architecture: The CPU architecture, normalized to the caption of the <code>cpu_architecture_id</code> value. In the case of <code>Other</code>, it is defined by the source.
	CpuArchitecture *string `json:"cpu_architecture,omitempty" parquet:"cpu_architecture,optional"`

	// CPU Architecture ID: The normalized identifier of the CPU architecture.
	CpuArchitectureId *int32 `json:"cpu_architecture_id,omitempty" parquet:"cpu_architecture_id,optional"`

	// CPU Bits: The cpu architecture, the number of bits used for addressing in memory. For example: <code>32</code> or <code>64</code>.
	CpuBits *int32 `json:"cpu_bits,omitempty" parquet:"cpu_bits,optional"`

	// CPU Cores: The number of processor cores in all installed processors. For Example: <code>42</code>.
	CpuCores *int32 `json:"cpu_cores,omitempty" parquet:"cpu_cores,optional"`

	// CPU Count: The number of physical processors on a system. For example: <code>1</code>.
	CpuCount *int32 `json:"cpu_count,omitempty" parquet:"cpu_count,optional"`

	// Processor Speed: The speed of the processor in Mhz. For Example: <code>4200</code>.
	CpuSpeed *int32 `json:"cpu_speed,omitempty" parquet:"cpu_speed,optional"`

	// Processor Type: The processor type. For example: <code>x86 Family 6 Model 37 Stepping 5</code>.
	CpuType *string `json:"cpu_type,omitempty" parquet:"cpu_type,optional"`

	// Desktop Display: The desktop display affiliated with the event
	DesktopDisplay *Display `json:"desktop_display,omitempty" parquet:"desktop_display,optional"`

	// Keyboard Information: The keyboard detailed information.
	KeyboardInfo *KeyboardInformation `json:"keyboard_info,omitempty" parquet:"keyboard_info,optional"`

	// RAM Size: The total amount of installed RAM, in Megabytes. For example: <code>2048</code>.
	RamSize *int32 `json:"ram_size,omitempty" parquet:"ram_size,optional"`

	// Serial Number: The device manufacturer serial number.
	SerialNumber *string `json:"serial_number,omitempty" parquet:"serial_number,optional"`

	// UUID: The device manufacturer assigned universally unique hardware identifier. For example: The BIOS System UUID or the Apple IOPlatformUUID.
	Uuid *string `json:"uuid,omitempty" parquet:"uuid,optional"`

	// Vendor Name: The device manufacturer.
	VendorName *string `json:"vendor_name,omitempty" parquet:"vendor_name,optional"`
}

var DeviceHardwareInfoFields = []arrow.Field{
	{Name: "bios_date", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "bios_manufacturer", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "bios_ver", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "chassis", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "cpu_architecture", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "cpu_architecture_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "cpu_bits", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "cpu_cores", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "cpu_count", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "cpu_speed", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "cpu_type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "desktop_display", Type: DisplayStruct, Nullable: true},
	{Name: "keyboard_info", Type: KeyboardInformationStruct, Nullable: true},
	{Name: "ram_size", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "serial_number", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uuid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "vendor_name", Type: arrow.BinaryTypes.String, Nullable: true},
}

var DeviceHardwareInfoStruct = arrow.StructOf(DeviceHardwareInfoFields...)

var DeviceHardwareInfoSchema = arrow.NewSchema(DeviceHardwareInfoFields, nil)
var DeviceHardwareInfoClassname = "device_hw_info"
