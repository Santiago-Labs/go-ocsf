// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Organization struct {

	// Name: The name of the organization, Oracle Cloud Tenancy, Google Cloud Organization, or AWS Organization. For example, <code> Widget, Inc. </code> or the <code> AWS Organization name </code>.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Org Unit Name: The name of an organizational unit, Google Cloud Folder, or AWS Org Unit. For example, the <code> GCP Project Name </code>, or <code> Dev_Prod_OU </code>.
	OuName *string `json:"ou_name,omitempty" parquet:"ou_name,optional"`

	// Org Unit ID: The unique identifier of an organizational unit, Google Cloud Folder, or AWS Org Unit. For example, an  <code> Oracle Cloud Tenancy ID </code>, <code> AWS OU ID </code>, or <code> GCP Folder ID </code>.
	OuUid *string `json:"ou_uid,omitempty" parquet:"ou_uid,optional"`

	// Unique ID: The unique identifier of the organization, Oracle Cloud Tenancy, Google Cloud Organization, or AWS Organization. For example, an <code> AWS Org ID </code> or <code> Oracle Cloud Domain ID </code>.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`
}

func (v *Organization) Observable() (*int, string) {
	return nil, ""
}

var OrganizationFields = []arrow.Field{
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "ou_name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "ou_uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
}

var OrganizationStruct = arrow.StructOf(OrganizationFields...)

var OrganizationSchema = arrow.NewSchema(OrganizationFields, nil)
var OrganizationClassname = "organization"
