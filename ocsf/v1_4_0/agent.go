// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Agent struct {

	// Agent Name: The name of the agent or sensor. For example: <code>AWS SSM Agent</code>.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Agent Policies: Describes the various policies that may be applied or enforced by an agent or sensor. E.g., Conditional Access, prevention, auto-update, tamper protection, destination configuration, etc.
	Policies []*Policy `json:"policies,omitempty" parquet:"policies,optional,list"`

	// Agent Type: The normalized caption of the type_id value for the agent or sensor. In the case of 'Other' or 'Unknown', it is defined by the event source.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Type ID: The normalized representation of an agent or sensor. E.g., EDR, vulnerability management, APM, backup & recovery, etc.
	TypeId *int32 `json:"type_id,omitempty" parquet:"type_id,optional"`

	// Agent ID: The UID of the agent or sensor, sometimes known as a Sensor ID or <code>aid</code>.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// Alternate Agent ID: An alternative or contextual identifier for the agent or sensor, such as a configuration, organization, or license UID.
	UidAlt *string `json:"uid_alt,omitempty" parquet:"uid_alt,optional"`

	// Vendor Name: The company or author who created the agent or sensor. For example: <code>Crowdstrike</code>.
	VendorName *string `json:"vendor_name,omitempty" parquet:"vendor_name,optional"`

	// Agent Version: The semantic version of the agent or sensor, e.g., <code>7.101.50.0</code>.
	Version *string `json:"version,omitempty" parquet:"version,optional"`
}

var AgentFields = []arrow.Field{
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "policies", Type: arrow.ListOf(PolicyStruct), Nullable: true},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid_alt", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "vendor_name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "version", Type: arrow.BinaryTypes.String, Nullable: true},
}

var AgentStruct = arrow.StructOf(AgentFields...)

var AgentSchema = arrow.NewSchema(AgentFields, nil)
