// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Aircraft struct {

	// Geo Location: The detailed geographical location usually associated with an IP address.
	Location *GeoLocation `json:"location,omitempty" parquet:"location,optional"`

	// Model: The model name of the aircraft or unmanned system.
	Model *string `json:"model,omitempty" parquet:"model,optional"`

	// Name: The name of the aircraft, such as the such as the flight name or callsign.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Serial Number: The serial number of the aircraft.
	SerialNumber *string `json:"serial_number,omitempty" parquet:"serial_number,optional"`

	// Speed: Ground speed of flight. This value is provided in meters per second with a minimum resolution of 0.25 m/s. Special Values: <code>Invalid</code>, <code>No Value</code>, or <code>Unknown: 255 m/s</code>.
	Speed *string `json:"speed,omitempty" parquet:"speed,optional"`

	// Speed Accuracy: Provides quality/containment on horizontal ground speed. Measured in meters/second.
	SpeedAccuracy *string `json:"speed_accuracy,omitempty" parquet:"speed_accuracy,optional"`

	// Track Direction: Direction of flight expressed as a “True North-based” ground track angle. This value is provided in clockwise degrees with a minimum resolution of 1 degree. If aircraft is not moving horizontally, use the “Unknown” value
	TrackDirection *string `json:"track_direction,omitempty" parquet:"track_direction,optional"`

	// Unique ID: The primary identification identifier for an aircraft, such as the 24-bit International Civil Aviation Organization (ICAO) identifier of the aircraft, as 6 hex digits.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// Alternate ID: A secondary identification identifier for an aircraft, such as the 4-digit squawk (octal representation).
	UidAlt *string `json:"uid_alt,omitempty" parquet:"uid_alt,optional"`

	// Vertical Speed: Vertical speed upward relative to the WGS-84 datum, measured in meters per second. Special Values: <code>Invalid</code>, <code>No Value</code>, or <code>Unknown: 63 m/s</code>.
	VerticalSpeed *string `json:"vertical_speed,omitempty" parquet:"vertical_speed,optional"`
}

var AircraftFields = []arrow.Field{
	{Name: "location", Type: GeoLocationStruct, Nullable: true},
	{Name: "model", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "serial_number", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "speed", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "speed_accuracy", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "track_direction", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid_alt", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "vertical_speed", Type: arrow.BinaryTypes.String, Nullable: true},
}

var AircraftStruct = arrow.StructOf(AircraftFields...)

var AircraftSchema = arrow.NewSchema(AircraftFields, nil)
