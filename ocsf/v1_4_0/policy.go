// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Policy struct {

	// Description: The description of the policy.
	Desc *string `json:"desc,omitempty" parquet:"desc,optional"`

	// Group: The policy group.
	Group *Group `json:"group,omitempty" parquet:"group,optional"`

	// Applied: A determination if the content of a policy was applied to a target or request, or not.
	IsApplied *bool `json:"is_applied,omitempty" parquet:"is_applied,optional"`

	// Name: The policy name. For example: <code>IAM Policy</code>.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Unique ID: A unique identifier of the policy instance.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`

	// Version: The policy version number.
	Version *string `json:"version,omitempty" parquet:"version,optional"`
}

var PolicyFields = []arrow.Field{
	{Name: "desc", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "group", Type: GroupStruct, Nullable: true},
	{Name: "is_applied", Type: arrow.FixedWidthTypes.Boolean, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "version", Type: arrow.BinaryTypes.String, Nullable: true},
}

var PolicyStruct = arrow.StructOf(PolicyFields...)

var PolicySchema = arrow.NewSchema(PolicyFields, nil)
