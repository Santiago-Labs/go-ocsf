// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type Database struct {

	// Created Time: The time when the database was known to have been created.
	CreatedTime int64 `json:"created_time,omitempty" parquet:"created_time,optional,timestamp_millis,timestamp(millisecond)"`

	// Data Classification: A list of Data Classification objects, that include information about data classification levels and data category types, indentified by a classifier.
	DataClassifications []*DataClassification `json:"data_classifications,omitempty" parquet:"data_classifications,optional,list"`

	// Description: The description of the database.
	Desc *string `json:"desc,omitempty" parquet:"desc,optional"`

	// Groups: The group names to which the database belongs.
	Groups []*Group `json:"groups,omitempty" parquet:"groups,optional,list"`

	// Modified Time: The most recent time when any changes, updates, or modifications were made within the database.
	ModifiedTime int64 `json:"modified_time,omitempty" parquet:"modified_time,optional,timestamp_millis,timestamp(millisecond)"`

	// Name: The database name, ordinarily as assigned by a database administrator.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Size: The size of the database in bytes.
	Size *int64 `json:"size,omitempty" parquet:"size,optional"`

	// Type: The database type.
	Type *string `json:"type,omitempty" parquet:"type,optional"`

	// Type ID: The normalized identifier of the database type.
	TypeId int32 `json:"type_id" parquet:"type_id"`

	// Unique ID: The unique identifier of the database.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`
}

var DatabaseFields = []arrow.Field{
	{Name: "created_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "data_classifications", Type: arrow.ListOf(DataClassificationStruct), Nullable: true},
	{Name: "desc", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "groups", Type: arrow.ListOf(GroupStruct), Nullable: true},
	{Name: "modified_time", Type: arrow.FixedWidthTypes.Timestamp_ms, Nullable: true},
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "size", Type: arrow.PrimitiveTypes.Int64, Nullable: true},
	{Name: "type", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "type_id", Type: arrow.PrimitiveTypes.Int32, Nullable: false},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
}

var DatabaseStruct = arrow.StructOf(DatabaseFields...)

var DatabaseSchema = arrow.NewSchema(DatabaseFields, nil)
var DatabaseClassname = "database"
