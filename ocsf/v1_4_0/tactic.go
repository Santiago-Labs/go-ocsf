// autogenerated by scripts/model_gen.go. DO NOT EDIT
package v1_4_0

import (
	"github.com/apache/arrow-go/v18/arrow"
)

type MITREATTCKTactic struct {

	// Name: The tactic name that is associated with the attack technique, as defined by <a target='_blank' href='https://attack.mitre.org/wiki/ATT&CK_Matrix'>ATT&CK® Matrix</a>. For example: <code>Reconnaissance</code>.
	Name *string `json:"name,omitempty" parquet:"name,optional"`

	// Source URL: The versioned permalink of the attack tactic, as defined by <a target='_blank' href='https://attack.mitre.org/wiki/ATT&CK_Matrix'>ATT&CK® Matrix</a>. For example: <code>https://attack.mitre.org/versions/v14/tactics/TA0043/</code>.
	SrcUrl *string `json:"src_url,omitempty" parquet:"src_url,optional"`

	// Unique ID: The tactic ID that is associated with the attack technique, as defined by <a target='_blank' href='https://attack.mitre.org/wiki/ATT&CK_Matrix'>ATT&CK® Matrix</a>. For example: <code>TA0043</code>.
	Uid *string `json:"uid,omitempty" parquet:"uid,optional"`
}

func (v *MITREATTCKTactic) Observable() (*int, string) {
	return nil, ""
}

var MITREATTCKTacticFields = []arrow.Field{
	{Name: "name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "src_url", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
}

var MITREATTCKTacticStruct = arrow.StructOf(MITREATTCKTacticFields...)

var MITREATTCKTacticSchema = arrow.NewSchema(MITREATTCKTacticFields, nil)
var MITREATTCKTacticClassname = "tactic"
