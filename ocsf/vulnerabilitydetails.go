package ocsf

import (
	"time"

	"github.com/apache/arrow/go/v15/arrow"
)

// VulnerabilityDetailsFields defines the Arrow fields for VulnerabilityDetails.
var VulnerabilityDetailsFields = []arrow.Field{
	{Name: "uid", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "cve", Type: CVEStruct, Nullable: true},
	{Name: "cwe", Type: CWEStruct, Nullable: true},
	{Name: "desc", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "title", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "severity", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "is_exploit_available", Type: arrow.FixedWidthTypes.Boolean, Nullable: true},
	{Name: "first_seen_time", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "is_fix_available", Type: arrow.FixedWidthTypes.Boolean, Nullable: true},
	{Name: "kb_article_list", Type: arrow.ListOf(KBArticleStruct), Nullable: true},
	{Name: "last_seen_time", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "references", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "related_vulnerabilities", Type: arrow.ListOf(arrow.BinaryTypes.String), Nullable: true},
	{Name: "remediation", Type: RemediationStruct, Nullable: true},
	{Name: "vendor_name", Type: arrow.BinaryTypes.String, Nullable: true},
	{Name: "affected_code", Type: arrow.ListOf(AffectedCodeStruct), Nullable: true},
	{Name: "affected_packages", Type: arrow.ListOf(AffectedSoftwarePackageStruct), Nullable: true},
}

var VulnerabilityDetailsStruct = arrow.StructOf(VulnerabilityDetailsFields...)
var VulnerabilityDetailsClassname = "vulnerability"

type VulnerabilityDetails struct {
	UID                    *string                   `json:"uid" parquet:"uid"`
	CVE                    *CVE                      `json:"cve" parquet:"cve"`
	CWE                    *CWE                      `json:"cwe" parquet:"cwe"` // e.g. "CWE-79"
	Desc                   *string                   `json:"desc" parquet:"desc"`
	Title                  *string                   `json:"title" parquet:"title"`
	Severity               *string                   `json:"severity" parquet:"severity"`
	IsExploitAvailable     *bool                     `json:"is_exploit_available" parquet:"is_exploit_available"`
	FirstSeenTime          *time.Time                `json:"first_seen_time" parquet:"first_seen_time"` // ISO8601 timestamp
	IsFixAvailable         *bool                     `json:"is_fix_available" parquet:"is_fix_available"`
	KbArticleList          []KBArticle               `json:"kb_article_list" parquet:"kb_article_list"`
	LastSeenTime           *time.Time                `json:"last_seen_time" parquet:"last_seen_time"` // ISO8601 timestamp
	References             []string                  `json:"references" parquet:"references"`
	RelatedVulnerabilities []string                  `json:"related_vulnerabilities" parquet:"related_vulnerabilities"`
	Remediation            *Remediation              `json:"remediation" parquet:"remediation"`
	VendorName             *string                   `json:"vendor_name" parquet:"vendor_name"`
	AffectedCode           []AffectedCode            `json:"affected_code,omitempty" parquet:"affected_code"`
	AffectedPackages       []AffectedSoftwarePackage `json:"affected_packages,omitempty" parquet:"affected_packages"`
}
